// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// !!!!!!!!!!!!                                                       !!!!!!!!!!!!
// !!!!!!!!!!!!    GENERATED BY HDLGEN - EDIT ONLY WHEN NECESSARY     !!!!!!!!!!!!
// !!!!!!!!!!!!                                                       !!!!!!!!!!!!
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

`define         TEST_BIT                3

// ================================================================
// NVDLA Open Source Project
// 
// Copyright(c) 2016 - 2017 NVIDIA Corporation.  Licensed under the
// NVDLA Open Hardware License; Check "LICENSE" which comes with 
// this distribution for more information.
// ================================================================

// File Name: NV_NVDLA_CMAC_CORE_mac.v

 `define INT_NUM_PLIC   240

module NV_NVDLA_CMAC_CORE_mac (
   nvdla_core_clk     //|< i
  ,nvdla_wg_clk       //|< i
  ,nvdla_core_rstn    //|< i
  ,cfg_is_fp16        //|< i
  ,cfg_is_int16       //|< i
  ,cfg_is_int8        //|< i
  ,cfg_is_wg          //|< i
  ,cfg_reg_en         //|< i
  ,dat_actv_data      //|< i
  ,dat_actv_nan       //|< i
  ,dat_actv_nz        //|< i
  //,dat_actv_pvld      //|< i
  ,dat_pre_exp        //|< i
  ,dat_pre_mask       //|< /
  ,dat_pre_pvld       //|< i
  ,dat_pre_stripe_end //|< i
  ,dat_pre_stripe_st  //|< i
  ,wt_actv_data       //|< i
  ,wt_actv_nan        //|< i
  ,wt_actv_nz         //|< i
  ,wt_actv_pvld       //|< i
  //,wt_sd_exp          //|< i
  ,wt_sd_mask         //|< i
  ,wt_sd_pvld         //|< i
  ,mac_out_data       //|> o
  ,mac_out_nan        //|> o
  ,mac_out_pvld,      //|> o
  );

 parameter NUM_INT  =    24;
 parameter NUM_TEST  =   8;
 parameter NUM_TOTAL  =  NUM_INT * NUM_TEST;

//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//| our $NUM_INT_VAR = 240;
//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---


// ========================================================================================
// ========================================================================================
input           nvdla_core_clk;
input           nvdla_wg_clk;
input           nvdla_core_rstn;
input           cfg_is_fp16;
input           cfg_is_int16;
input           cfg_is_int8;
input           cfg_is_wg;
input           cfg_reg_en;
input  [1023:0] dat_actv_data;
input    [63:0] dat_actv_nan;
input   [127:0] dat_actv_nz;
//input   [103:0] dat_actv_pvld;
input   [191:0] dat_pre_exp;
input    [63:0] dat_pre_mask;
input           dat_pre_pvld;
input           dat_pre_stripe_end;
input           dat_pre_stripe_st;
input  [1023:0] wt_actv_data;
input    [63:0] wt_actv_nan;
input   [127:0] wt_actv_nz;
input   [103:0] wt_actv_pvld;
//input   [191:0] wt_sd_exp;
input    [63:0] wt_sd_mask;
input           wt_sd_pvld;
output  [175:0] mac_out_data;
output          mac_out_nan;
output          mac_out_pvld;

// ****** these 2 Auto function must be before all wire or reg define ! ******
// ========================================================================================
//|: &AutoDef;
//| ================================================================================
//| ============ Below Wires & Regs are auto-generated by &AutoDef =================
//| ============ these definitions may be not perfect or correct   =================
//| ============ you may need to manually update/correct           =================
//| ================================================================================
wire [242:0]      pad_plic_int_cfg      ;
wire [239:0]      pad_plic_int_vld      ;
wire              plic_core0_me_int     ;
wire              plic_core0_se_int     ;
wire [0:0]        plic_hartx_mint_req   ;
wire [0:0]        plic_hartx_sint_req   ;
wire [240+15:0]   plic_int_cfg          ;
wire [255:0]      plic_int_cfg_test_0   ;
wire [255:0]      plic_int_cfg_test_1   ;
wire [255:0]      plic_int_cfg_test_2   ;
wire [239:0]      plic_int_cfg_test_3   ;
wire [258:0]      plic_int_cfg_test_4   ;
wire [23:0]       plic_int_cfg_test_5   ;
wire [255:0]      plic_int_cfg_test_6   ;
wire [207:0]      plic_int_cfg_test_7   ;
wire [240+15:0]   plic_int_vld          ;
wire [63:0]       res_tag_b0            ;
wire [3:0]        test_input            ;
wire              test_wire0            ;
wire              test_wire1            ;
wire              test_wire2            ;
wire              test_wire3            ;
wire [3:0]        test_wires            ;
reg  [64:0]       cfg_is_int8_d0           ;
reg               cfg_reg_en_d0            ;
reg               mac_out_pvld             ;
reg               q                        ;
//| ============================= End of Auto Wires/Regs ===========================
//| ================================================================================

//|: &AutoInstSig;
//| ====================================================================================
//| ======== Below Wires are for all &Instance modules by &AutoInstSig  ===============
//| ============ you may need to manually update/correct                 ===============
// ------ signals of Instance: my_spi_Param & my_spi ------
wire              IPX_clk_i                    ;
wire              IPX_rst_i                    ;
wire              MISO_I_IPX                   ;
wire              MOSI_O_IPX                   ;
wire              SCK_O_IPX                    ;
wire              SS_O_IPX                     ;
wire              ack_o                        ;
wire [2:0]        adr_i                        ;
wire              cyc_i                        ;
wire [7:0]        dat_i                        ;
wire [7:0]        dat_o                        ;
wire              inta_o                       ;
wire              stb_i                        ;
wire              we_i                         ;
// ------ signals of Instance: u_Test_AFifo ------
wire              rd_clk                       ;
wire              rst_rd                       ;
wire              rst_wr                       ;
wire              wr_clk                       ;
// ------ signals of Instance: u_Test_SFifo ------
wire              clks                         ;
wire              rstn                         ;
// ------ signals of Instance: u_Test_SFifo & u_Test_AFifo ------
wire              empty                        ;
wire              full                         ;
wire [1:0]        rd_dout                      ;
wire              rd_en                        ;
wire [data_width-1:0] wr_din                       ;
wire              wr_en                        ;
// ------ signals of Instance: u_exp ------
reg  [191:0]      dat_pre_exp                  ;
reg  [63:0]       dat_pre_mask                 ;
wire              dat_pre_pvld                 ;
wire              dat_pre_stripe_end           ;
wire              dat_pre_stripe_st            ;
wire [191:0]      wt_sd_exp                    ;
wire [63:0]       wt_sd_mask                   ;
wire              wt_sd_pvld                   ;
// ------ signals of Instance: u_exp & u_mul_0 ------
wire [3:0]        exp_sft_00                   ;
// ------ signals of Instance: u_exp & u_mul_1 ------
wire [3:0]        exp_sft_01                   ;
// ------ signals of Instance: u_exp & u_mul_10 ------
wire [3:0]        exp_sft_10                   ;
// ------ signals of Instance: u_exp & u_mul_11 ------
wire [3:0]        exp_sft_11                   ;
// ------ signals of Instance: u_exp & u_mul_12 ------
wire [3:0]        exp_sft_12                   ;
// ------ signals of Instance: u_exp & u_mul_13 ------
wire [3:0]        exp_sft_13                   ;
// ------ signals of Instance: u_exp & u_mul_14 ------
wire [3:0]        exp_sft_14                   ;
// ------ signals of Instance: u_exp & u_mul_15 ------
wire [3:0]        exp_sft_15                   ;
// ------ signals of Instance: u_exp & u_mul_16 ------
wire [3:0]        exp_sft_16                   ;
// ------ signals of Instance: u_exp & u_mul_17 ------
wire [3:0]        exp_sft_17                   ;
// ------ signals of Instance: u_exp & u_mul_18 ------
wire [3:0]        exp_sft_18                   ;
// ------ signals of Instance: u_exp & u_mul_19 ------
wire [3:0]        exp_sft_19                   ;
// ------ signals of Instance: u_exp & u_mul_2 ------
wire [3:0]        exp_sft_02                   ;
// ------ signals of Instance: u_exp & u_mul_20 ------
wire [3:0]        exp_sft_20                   ;
// ------ signals of Instance: u_exp & u_mul_21 ------
wire [3:0]        exp_sft_21                   ;
// ------ signals of Instance: u_exp & u_mul_22 ------
wire [3:0]        exp_sft_22                   ;
// ------ signals of Instance: u_exp & u_mul_23 ------
wire [3:0]        exp_sft_23                   ;
// ------ signals of Instance: u_exp & u_mul_24 ------
wire [3:0]        exp_sft_24                   ;
// ------ signals of Instance: u_exp & u_mul_25 ------
wire [3:0]        exp_sft_25                   ;
// ------ signals of Instance: u_exp & u_mul_26 ------
wire [3:0]        exp_sft_26                   ;
// ------ signals of Instance: u_exp & u_mul_27 ------
wire [3:0]        exp_sft_27                   ;
// ------ signals of Instance: u_exp & u_mul_28 ------
wire [3:0]        exp_sft_28                   ;
// ------ signals of Instance: u_exp & u_mul_29 ------
wire [3:0]        exp_sft_29                   ;
// ------ signals of Instance: u_exp & u_mul_3 ------
wire [3:0]        exp_sft_03                   ;
// ------ signals of Instance: u_exp & u_mul_30 ------
wire [3:0]        exp_sft_30                   ;
// ------ signals of Instance: u_exp & u_mul_31 ------
wire [3:0]        exp_sft_31                   ;
// ------ signals of Instance: u_exp & u_mul_32 ------
wire [3:0]        exp_sft_32                   ;
// ------ signals of Instance: u_exp & u_mul_33 ------
wire [3:0]        exp_sft_33                   ;
// ------ signals of Instance: u_exp & u_mul_34 ------
wire [3:0]        exp_sft_34                   ;
// ------ signals of Instance: u_exp & u_mul_35 ------
wire [3:0]        exp_sft_35                   ;
// ------ signals of Instance: u_exp & u_mul_36 ------
wire [3:0]        exp_sft_36                   ;
// ------ signals of Instance: u_exp & u_mul_37 ------
wire [3:0]        exp_sft_37                   ;
// ------ signals of Instance: u_exp & u_mul_38 ------
wire [3:0]        exp_sft_38                   ;
// ------ signals of Instance: u_exp & u_mul_39 ------
wire [3:0]        exp_sft_39                   ;
// ------ signals of Instance: u_exp & u_mul_4 ------
wire [3:0]        exp_sft_04                   ;
// ------ signals of Instance: u_exp & u_mul_40 ------
wire [3:0]        exp_sft_40                   ;
// ------ signals of Instance: u_exp & u_mul_41 ------
wire [3:0]        exp_sft_41                   ;
// ------ signals of Instance: u_exp & u_mul_42 ------
wire [3:0]        exp_sft_42                   ;
// ------ signals of Instance: u_exp & u_mul_43 ------
wire [3:0]        exp_sft_43                   ;
// ------ signals of Instance: u_exp & u_mul_44 ------
wire [3:0]        exp_sft_44                   ;
// ------ signals of Instance: u_exp & u_mul_45 ------
wire [3:0]        exp_sft_45                   ;
// ------ signals of Instance: u_exp & u_mul_46 ------
wire [3:0]        exp_sft_46                   ;
// ------ signals of Instance: u_exp & u_mul_47 ------
wire [3:0]        exp_sft_47                   ;
// ------ signals of Instance: u_exp & u_mul_48 ------
wire [3:0]        exp_sft_48                   ;
// ------ signals of Instance: u_exp & u_mul_49 ------
wire [3:0]        exp_sft_49                   ;
// ------ signals of Instance: u_exp & u_mul_5 ------
wire [3:0]        exp_sft_05                   ;
// ------ signals of Instance: u_exp & u_mul_50 ------
wire [3:0]        exp_sft_50                   ;
// ------ signals of Instance: u_exp & u_mul_51 ------
wire [3:0]        exp_sft_51                   ;
// ------ signals of Instance: u_exp & u_mul_52 ------
wire [3:0]        exp_sft_52                   ;
// ------ signals of Instance: u_exp & u_mul_53 ------
wire [3:0]        exp_sft_53                   ;
// ------ signals of Instance: u_exp & u_mul_54 ------
wire [3:0]        exp_sft_54                   ;
// ------ signals of Instance: u_exp & u_mul_55 ------
wire [3:0]        exp_sft_55                   ;
// ------ signals of Instance: u_exp & u_mul_56 ------
wire [3:0]        exp_sft_56                   ;
// ------ signals of Instance: u_exp & u_mul_57 ------
wire [3:0]        exp_sft_57                   ;
// ------ signals of Instance: u_exp & u_mul_58 ------
wire [3:0]        exp_sft_58                   ;
// ------ signals of Instance: u_exp & u_mul_59 ------
wire [3:0]        exp_sft_59                   ;
// ------ signals of Instance: u_exp & u_mul_6 ------
wire [3:0]        exp_sft_06                   ;
// ------ signals of Instance: u_exp & u_mul_60 ------
wire [3:0]        exp_sft_60                   ;
// ------ signals of Instance: u_exp & u_mul_61 ------
wire [3:0]        exp_sft_61                   ;
// ------ signals of Instance: u_exp & u_mul_62 ------
wire [3:0]        exp_sft_62                   ;
// ------ signals of Instance: u_exp & u_mul_63 ------
wire [3:0]        exp_sft_63                   ;
// ------ signals of Instance: u_exp & u_mul_7 ------
wire [3:0]        exp_sft_07                   ;
// ------ signals of Instance: u_exp & u_mul_8 ------
wire [3:0]        exp_sft_08                   ;
// ------ signals of Instance: u_exp & u_mul_9 ------
wire [3:0]        exp_sft_09                   ;
// ------ signals of Instance: u_mul_0 ------
wire [15:0]       dat_actv_data0               ;
wire [1:0]        dat_actv_nz0                 ;
wire [31:0]       res_a_00                     ;
wire [31:0]       res_b_00                     ;
wire [7:0]        res_tag_0                    ;
wire [15:0]       wt_actv_data0                ;
wire [1:0]        wt_actv_nz00                 ;
// ------ signals of Instance: u_mul_0 & u_mul_1 & u_mul_2 & u_mul_3 & u_mul_4 & u_mul_5 & u_mul_6 & u_mul_7 & u_mul_8 & u_mul_9 & u_mul_10 & u_mul_11 & u_mul_12 & u_mul_13 & u_mul_14 & u_mul_15 & u_mul_16 & u_mul_17 & u_mul_18 & u_mul_19 & u_mul_20 & u_mul_21 & u_mul_22 & u_mul_23 & u_mul_24 & u_mul_25 & u_mul_26 & u_mul_27 & u_mul_28 & u_mul_29 & u_mul_30 & u_mul_31 & u_mul_32 & u_mul_33 & u_mul_34 & u_mul_35 & u_mul_36 & u_mul_37 & u_mul_38 & u_mul_39 & u_mul_40 & u_mul_41 & u_mul_42 & u_mul_43 & u_mul_44 & u_mul_45 & u_mul_46 & u_mul_47 & u_mul_48 & u_mul_49 & u_mul_50 & u_mul_51 & u_mul_52 & u_mul_53 & u_mul_54 & u_mul_55 & u_mul_56 & u_mul_57 & u_mul_58 & u_mul_59 & u_mul_60 & u_mul_61 & u_mul_62 & u_mul_63 ------
wire              cfg_is_int8                  ;
wire [63:0]       dat_actv_pvld                ;
wire [63:0]       wt_actv_pvld                 ;
// ------ signals of Instance: u_mul_1 ------
wire [15:0]       dat_actv_data1               ;
wire [1:0]        dat_actv_nz1                 ;
wire [31:0]       res_a_01                     ;
wire [31:0]       res_b_01                     ;
wire [7:0]        res_tag_1                    ;
wire [15:0]       wt_actv_data1                ;
wire [1:0]        wt_actv_nz01                 ;
// ------ signals of Instance: u_mul_10 ------
wire [15:0]       dat_actv_data10              ;
wire [1:0]        dat_actv_nz10                ;
wire [31:0]       res_a_10                     ;
wire [31:0]       res_b_10                     ;
wire [7:0]        res_tag_10                   ;
wire [15:0]       wt_actv_data10               ;
wire [1:0]        wt_actv_nz10                 ;
// ------ signals of Instance: u_mul_11 ------
wire [15:0]       dat_actv_data11              ;
wire [1:0]        dat_actv_nz11                ;
wire [31:0]       res_a_11                     ;
wire [31:0]       res_b_11                     ;
wire [7:0]        res_tag_11                   ;
wire [15:0]       wt_actv_data11               ;
wire [1:0]        wt_actv_nz11                 ;
// ------ signals of Instance: u_mul_12 ------
wire [15:0]       dat_actv_data12              ;
wire [1:0]        dat_actv_nz12                ;
wire [31:0]       res_a_12                     ;
wire [31:0]       res_b_12                     ;
wire [7:0]        res_tag_12                   ;
wire [15:0]       wt_actv_data12               ;
wire [1:0]        wt_actv_nz12                 ;
// ------ signals of Instance: u_mul_13 ------
wire [15:0]       dat_actv_data13              ;
wire [1:0]        dat_actv_nz13                ;
wire [31:0]       res_a_13                     ;
wire [31:0]       res_b_13                     ;
wire [7:0]        res_tag_13                   ;
wire [15:0]       wt_actv_data13               ;
wire [1:0]        wt_actv_nz13                 ;
// ------ signals of Instance: u_mul_14 ------
wire [15:0]       dat_actv_data14              ;
wire [1:0]        dat_actv_nz14                ;
wire [31:0]       res_a_14                     ;
wire [31:0]       res_b_14                     ;
wire [7:0]        res_tag_14                   ;
wire [15:0]       wt_actv_data14               ;
wire [1:0]        wt_actv_nz14                 ;
// ------ signals of Instance: u_mul_15 ------
wire [15:0]       dat_actv_data15              ;
wire [1:0]        dat_actv_nz15                ;
wire [31:0]       res_a_15                     ;
wire [31:0]       res_b_15                     ;
wire [7:0]        res_tag_15                   ;
wire [15:0]       wt_actv_data15               ;
wire [1:0]        wt_actv_nz15                 ;
// ------ signals of Instance: u_mul_16 ------
wire [15:0]       dat_actv_data16              ;
wire [1:0]        dat_actv_nz16                ;
wire [31:0]       res_a_16                     ;
wire [31:0]       res_b_16                     ;
wire [7:0]        res_tag_16                   ;
wire [15:0]       wt_actv_data16               ;
wire [1:0]        wt_actv_nz16                 ;
// ------ signals of Instance: u_mul_17 ------
wire [15:0]       dat_actv_data17              ;
wire [1:0]        dat_actv_nz17                ;
wire [31:0]       res_a_17                     ;
wire [31:0]       res_b_17                     ;
wire [7:0]        res_tag_17                   ;
wire [15:0]       wt_actv_data17               ;
wire [1:0]        wt_actv_nz17                 ;
// ------ signals of Instance: u_mul_18 ------
wire [15:0]       dat_actv_data18              ;
wire [1:0]        dat_actv_nz18                ;
wire [31:0]       res_a_18                     ;
wire [31:0]       res_b_18                     ;
wire [7:0]        res_tag_18                   ;
wire [15:0]       wt_actv_data18               ;
wire [1:0]        wt_actv_nz18                 ;
// ------ signals of Instance: u_mul_19 ------
wire [15:0]       dat_actv_data19              ;
wire [1:0]        dat_actv_nz19                ;
wire [31:0]       res_a_19                     ;
wire [31:0]       res_b_19                     ;
wire [7:0]        res_tag_19                   ;
wire [15:0]       wt_actv_data19               ;
wire [1:0]        wt_actv_nz19                 ;
// ------ signals of Instance: u_mul_2 ------
wire [15:0]       dat_actv_data2               ;
wire [1:0]        dat_actv_nz2                 ;
wire [31:0]       res_a_02                     ;
wire [31:0]       res_b_02                     ;
wire [7:0]        res_tag_2                    ;
wire [15:0]       wt_actv_data2                ;
wire [1:0]        wt_actv_nz02                 ;
// ------ signals of Instance: u_mul_20 ------
wire [15:0]       dat_actv_data20              ;
wire [1:0]        dat_actv_nz20                ;
wire [31:0]       res_a_20                     ;
wire [31:0]       res_b_20                     ;
wire [7:0]        res_tag_20                   ;
wire [15:0]       wt_actv_data20               ;
wire [1:0]        wt_actv_nz20                 ;
// ------ signals of Instance: u_mul_21 ------
wire [15:0]       dat_actv_data21              ;
wire [1:0]        dat_actv_nz21                ;
wire [31:0]       res_a_21                     ;
wire [31:0]       res_b_21                     ;
wire [7:0]        res_tag_21                   ;
wire [15:0]       wt_actv_data21               ;
wire [1:0]        wt_actv_nz21                 ;
// ------ signals of Instance: u_mul_22 ------
wire [15:0]       dat_actv_data22              ;
wire [1:0]        dat_actv_nz22                ;
wire [31:0]       res_a_22                     ;
wire [31:0]       res_b_22                     ;
wire [7:0]        res_tag_22                   ;
wire [15:0]       wt_actv_data22               ;
wire [1:0]        wt_actv_nz22                 ;
// ------ signals of Instance: u_mul_23 ------
wire [15:0]       dat_actv_data23              ;
wire [1:0]        dat_actv_nz23                ;
wire [31:0]       res_a_23                     ;
wire [31:0]       res_b_23                     ;
wire [7:0]        res_tag_23                   ;
wire [15:0]       wt_actv_data23               ;
wire [1:0]        wt_actv_nz23                 ;
// ------ signals of Instance: u_mul_24 ------
wire [15:0]       dat_actv_data24              ;
wire [1:0]        dat_actv_nz24                ;
wire [31:0]       res_a_24                     ;
wire [31:0]       res_b_24                     ;
wire [7:0]        res_tag_24                   ;
wire [15:0]       wt_actv_data24               ;
wire [1:0]        wt_actv_nz24                 ;
// ------ signals of Instance: u_mul_25 ------
wire [15:0]       dat_actv_data25              ;
wire [1:0]        dat_actv_nz25                ;
wire [31:0]       res_a_25                     ;
wire [31:0]       res_b_25                     ;
wire [7:0]        res_tag_25                   ;
wire [15:0]       wt_actv_data25               ;
wire [1:0]        wt_actv_nz25                 ;
// ------ signals of Instance: u_mul_26 ------
wire [15:0]       dat_actv_data26              ;
wire [1:0]        dat_actv_nz26                ;
wire [31:0]       res_a_26                     ;
wire [31:0]       res_b_26                     ;
wire [7:0]        res_tag_26                   ;
wire [15:0]       wt_actv_data26               ;
wire [1:0]        wt_actv_nz26                 ;
// ------ signals of Instance: u_mul_27 ------
wire [15:0]       dat_actv_data27              ;
wire [1:0]        dat_actv_nz27                ;
wire [31:0]       res_a_27                     ;
wire [31:0]       res_b_27                     ;
wire [7:0]        res_tag_27                   ;
wire [15:0]       wt_actv_data27               ;
wire [1:0]        wt_actv_nz27                 ;
// ------ signals of Instance: u_mul_28 ------
wire [15:0]       dat_actv_data28              ;
wire [1:0]        dat_actv_nz28                ;
wire [31:0]       res_a_28                     ;
wire [31:0]       res_b_28                     ;
wire [7:0]        res_tag_28                   ;
wire [15:0]       wt_actv_data28               ;
wire [1:0]        wt_actv_nz28                 ;
// ------ signals of Instance: u_mul_29 ------
wire [15:0]       dat_actv_data29              ;
wire [1:0]        dat_actv_nz29                ;
wire [31:0]       res_a_29                     ;
wire [31:0]       res_b_29                     ;
wire [7:0]        res_tag_29                   ;
wire [15:0]       wt_actv_data29               ;
wire [1:0]        wt_actv_nz29                 ;
// ------ signals of Instance: u_mul_3 ------
wire [15:0]       dat_actv_data3               ;
wire [1:0]        dat_actv_nz3                 ;
wire [31:0]       res_a_03                     ;
wire [31:0]       res_b_03                     ;
wire [7:0]        res_tag_3                    ;
wire [15:0]       wt_actv_data3                ;
wire [1:0]        wt_actv_nz03                 ;
// ------ signals of Instance: u_mul_30 ------
wire [15:0]       dat_actv_data30              ;
wire [1:0]        dat_actv_nz30                ;
wire [31:0]       res_a_30                     ;
wire [31:0]       res_b_30                     ;
wire [7:0]        res_tag_30                   ;
wire [15:0]       wt_actv_data30               ;
wire [1:0]        wt_actv_nz30                 ;
// ------ signals of Instance: u_mul_31 ------
wire [15:0]       dat_actv_data31              ;
wire [1:0]        dat_actv_nz31                ;
wire [31:0]       res_a_31                     ;
wire [31:0]       res_b_31                     ;
wire [7:0]        res_tag_31                   ;
wire [15:0]       wt_actv_data31               ;
wire [1:0]        wt_actv_nz31                 ;
// ------ signals of Instance: u_mul_32 ------
wire [15:0]       dat_actv_data32              ;
wire [1:0]        dat_actv_nz32                ;
wire [31:0]       res_a_32                     ;
wire [31:0]       res_b_32                     ;
wire [7:0]        res_tag_32                   ;
wire [15:0]       wt_actv_data32               ;
wire [1:0]        wt_actv_nz32                 ;
// ------ signals of Instance: u_mul_33 ------
wire [15:0]       dat_actv_data33              ;
wire [1:0]        dat_actv_nz33                ;
wire [31:0]       res_a_33                     ;
wire [31:0]       res_b_33                     ;
wire [7:0]        res_tag_33                   ;
wire [15:0]       wt_actv_data33               ;
wire [1:0]        wt_actv_nz33                 ;
// ------ signals of Instance: u_mul_34 ------
wire [15:0]       dat_actv_data34              ;
wire [1:0]        dat_actv_nz34                ;
wire [31:0]       res_a_34                     ;
wire [31:0]       res_b_34                     ;
wire [7:0]        res_tag_34                   ;
wire [15:0]       wt_actv_data34               ;
wire [1:0]        wt_actv_nz34                 ;
// ------ signals of Instance: u_mul_35 ------
wire [15:0]       dat_actv_data35              ;
wire [1:0]        dat_actv_nz35                ;
wire [31:0]       res_a_35                     ;
wire [31:0]       res_b_35                     ;
wire [7:0]        res_tag_35                   ;
wire [15:0]       wt_actv_data35               ;
wire [1:0]        wt_actv_nz35                 ;
// ------ signals of Instance: u_mul_36 ------
wire [15:0]       dat_actv_data36              ;
wire [1:0]        dat_actv_nz36                ;
wire [31:0]       res_a_36                     ;
wire [31:0]       res_b_36                     ;
wire [7:0]        res_tag_36                   ;
wire [15:0]       wt_actv_data36               ;
wire [1:0]        wt_actv_nz36                 ;
// ------ signals of Instance: u_mul_37 ------
wire [15:0]       dat_actv_data37              ;
wire [1:0]        dat_actv_nz37                ;
wire [31:0]       res_a_37                     ;
wire [31:0]       res_b_37                     ;
wire [7:0]        res_tag_37                   ;
wire [15:0]       wt_actv_data37               ;
wire [1:0]        wt_actv_nz37                 ;
// ------ signals of Instance: u_mul_38 ------
wire [15:0]       dat_actv_data38              ;
wire [1:0]        dat_actv_nz38                ;
wire [31:0]       res_a_38                     ;
wire [31:0]       res_b_38                     ;
wire [7:0]        res_tag_38                   ;
wire [15:0]       wt_actv_data38               ;
wire [1:0]        wt_actv_nz38                 ;
// ------ signals of Instance: u_mul_39 ------
wire [15:0]       dat_actv_data39              ;
wire [1:0]        dat_actv_nz39                ;
wire [31:0]       res_a_39                     ;
wire [31:0]       res_b_39                     ;
wire [7:0]        res_tag_39                   ;
wire [15:0]       wt_actv_data39               ;
wire [1:0]        wt_actv_nz39                 ;
// ------ signals of Instance: u_mul_4 ------
wire [15:0]       dat_actv_data4               ;
wire [1:0]        dat_actv_nz4                 ;
wire [31:0]       res_a_04                     ;
wire [31:0]       res_b_04                     ;
wire [7:0]        res_tag_4                    ;
wire [15:0]       wt_actv_data4                ;
wire [1:0]        wt_actv_nz04                 ;
// ------ signals of Instance: u_mul_40 ------
wire [15:0]       dat_actv_data40              ;
wire [1:0]        dat_actv_nz40                ;
wire [31:0]       res_a_40                     ;
wire [31:0]       res_b_40                     ;
wire [7:0]        res_tag_40                   ;
wire [15:0]       wt_actv_data40               ;
wire [1:0]        wt_actv_nz40                 ;
// ------ signals of Instance: u_mul_41 ------
wire [15:0]       dat_actv_data41              ;
wire [1:0]        dat_actv_nz41                ;
wire [31:0]       res_a_41                     ;
wire [31:0]       res_b_41                     ;
wire [7:0]        res_tag_41                   ;
wire [15:0]       wt_actv_data41               ;
wire [1:0]        wt_actv_nz41                 ;
// ------ signals of Instance: u_mul_42 ------
wire [15:0]       dat_actv_data42              ;
wire [1:0]        dat_actv_nz42                ;
wire [31:0]       res_a_42                     ;
wire [31:0]       res_b_42                     ;
wire [7:0]        res_tag_42                   ;
wire [15:0]       wt_actv_data42               ;
wire [1:0]        wt_actv_nz42                 ;
// ------ signals of Instance: u_mul_43 ------
wire [15:0]       dat_actv_data43              ;
wire [1:0]        dat_actv_nz43                ;
wire [31:0]       res_a_43                     ;
wire [31:0]       res_b_43                     ;
wire [7:0]        res_tag_43                   ;
wire [15:0]       wt_actv_data43               ;
wire [1:0]        wt_actv_nz43                 ;
// ------ signals of Instance: u_mul_44 ------
wire [15:0]       dat_actv_data44              ;
wire [1:0]        dat_actv_nz44                ;
wire [31:0]       res_a_44                     ;
wire [31:0]       res_b_44                     ;
wire [7:0]        res_tag_44                   ;
wire [15:0]       wt_actv_data44               ;
wire [1:0]        wt_actv_nz44                 ;
// ------ signals of Instance: u_mul_45 ------
wire [15:0]       dat_actv_data45              ;
wire [1:0]        dat_actv_nz45                ;
wire [31:0]       res_a_45                     ;
wire [31:0]       res_b_45                     ;
wire [7:0]        res_tag_45                   ;
wire [15:0]       wt_actv_data45               ;
wire [1:0]        wt_actv_nz45                 ;
// ------ signals of Instance: u_mul_46 ------
wire [15:0]       dat_actv_data46              ;
wire [1:0]        dat_actv_nz46                ;
wire [31:0]       res_a_46                     ;
wire [31:0]       res_b_46                     ;
wire [7:0]        res_tag_46                   ;
wire [15:0]       wt_actv_data46               ;
wire [1:0]        wt_actv_nz46                 ;
// ------ signals of Instance: u_mul_47 ------
wire [15:0]       dat_actv_data47              ;
wire [1:0]        dat_actv_nz47                ;
wire [31:0]       res_a_47                     ;
wire [31:0]       res_b_47                     ;
wire [7:0]        res_tag_47                   ;
wire [15:0]       wt_actv_data47               ;
wire [1:0]        wt_actv_nz47                 ;
// ------ signals of Instance: u_mul_48 ------
wire [15:0]       dat_actv_data48              ;
wire [1:0]        dat_actv_nz48                ;
wire [31:0]       res_a_48                     ;
wire [31:0]       res_b_48                     ;
wire [7:0]        res_tag_48                   ;
wire [15:0]       wt_actv_data48               ;
wire [1:0]        wt_actv_nz48                 ;
// ------ signals of Instance: u_mul_49 ------
wire [15:0]       dat_actv_data49              ;
wire [1:0]        dat_actv_nz49                ;
wire [31:0]       res_a_49                     ;
wire [31:0]       res_b_49                     ;
wire [7:0]        res_tag_49                   ;
wire [15:0]       wt_actv_data49               ;
wire [1:0]        wt_actv_nz49                 ;
// ------ signals of Instance: u_mul_5 ------
wire [15:0]       dat_actv_data5               ;
wire [1:0]        dat_actv_nz5                 ;
wire [31:0]       res_a_05                     ;
wire [31:0]       res_b_05                     ;
wire [7:0]        res_tag_5                    ;
wire [15:0]       wt_actv_data5                ;
wire [1:0]        wt_actv_nz05                 ;
// ------ signals of Instance: u_mul_50 ------
wire [15:0]       dat_actv_data50              ;
wire [1:0]        dat_actv_nz50                ;
wire [31:0]       res_a_50                     ;
wire [31:0]       res_b_50                     ;
wire [7:0]        res_tag_50                   ;
wire [15:0]       wt_actv_data50               ;
wire [1:0]        wt_actv_nz50                 ;
// ------ signals of Instance: u_mul_51 ------
wire [15:0]       dat_actv_data51              ;
wire [1:0]        dat_actv_nz51                ;
wire [31:0]       res_a_51                     ;
wire [31:0]       res_b_51                     ;
wire [7:0]        res_tag_51                   ;
wire [15:0]       wt_actv_data51               ;
wire [1:0]        wt_actv_nz51                 ;
// ------ signals of Instance: u_mul_52 ------
wire [15:0]       dat_actv_data52              ;
wire [1:0]        dat_actv_nz52                ;
wire [31:0]       res_a_52                     ;
wire [31:0]       res_b_52                     ;
wire [7:0]        res_tag_52                   ;
wire [15:0]       wt_actv_data52               ;
wire [1:0]        wt_actv_nz52                 ;
// ------ signals of Instance: u_mul_53 ------
wire [15:0]       dat_actv_data53              ;
wire [1:0]        dat_actv_nz53                ;
wire [31:0]       res_a_53                     ;
wire [31:0]       res_b_53                     ;
wire [7:0]        res_tag_53                   ;
wire [15:0]       wt_actv_data53               ;
wire [1:0]        wt_actv_nz53                 ;
// ------ signals of Instance: u_mul_54 ------
wire [15:0]       dat_actv_data54              ;
wire [1:0]        dat_actv_nz54                ;
wire [31:0]       res_a_54                     ;
wire [31:0]       res_b_54                     ;
wire [7:0]        res_tag_54                   ;
wire [15:0]       wt_actv_data54               ;
wire [1:0]        wt_actv_nz54                 ;
// ------ signals of Instance: u_mul_55 ------
wire [15:0]       dat_actv_data55              ;
wire [1:0]        dat_actv_nz55                ;
wire [31:0]       res_a_55                     ;
wire [31:0]       res_b_55                     ;
wire [7:0]        res_tag_55                   ;
wire [15:0]       wt_actv_data55               ;
wire [1:0]        wt_actv_nz55                 ;
// ------ signals of Instance: u_mul_56 ------
wire [15:0]       dat_actv_data56              ;
wire [1:0]        dat_actv_nz56                ;
wire [31:0]       res_a_56                     ;
wire [31:0]       res_b_56                     ;
wire [7:0]        res_tag_56                   ;
wire [15:0]       wt_actv_data56               ;
wire [1:0]        wt_actv_nz56                 ;
// ------ signals of Instance: u_mul_57 ------
wire [15:0]       dat_actv_data57              ;
wire [1:0]        dat_actv_nz57                ;
wire [31:0]       res_a_57                     ;
wire [31:0]       res_b_57                     ;
wire [7:0]        res_tag_57                   ;
wire [15:0]       wt_actv_data57               ;
wire [1:0]        wt_actv_nz57                 ;
// ------ signals of Instance: u_mul_58 ------
wire [15:0]       dat_actv_data58              ;
wire [1:0]        dat_actv_nz58                ;
wire [31:0]       res_a_58                     ;
wire [31:0]       res_b_58                     ;
wire [7:0]        res_tag_58                   ;
wire [15:0]       wt_actv_data58               ;
wire [1:0]        wt_actv_nz58                 ;
// ------ signals of Instance: u_mul_59 ------
wire [15:0]       dat_actv_data59              ;
wire [1:0]        dat_actv_nz59                ;
wire [31:0]       res_a_59                     ;
wire [31:0]       res_b_59                     ;
wire [7:0]        res_tag_59                   ;
wire [15:0]       wt_actv_data59               ;
wire [1:0]        wt_actv_nz59                 ;
// ------ signals of Instance: u_mul_6 ------
wire [15:0]       dat_actv_data6               ;
wire [1:0]        dat_actv_nz6                 ;
wire [31:0]       res_a_06                     ;
wire [31:0]       res_b_06                     ;
wire [7:0]        res_tag_6                    ;
wire [15:0]       wt_actv_data6                ;
wire [1:0]        wt_actv_nz06                 ;
// ------ signals of Instance: u_mul_60 ------
wire [15:0]       dat_actv_data60              ;
wire [1:0]        dat_actv_nz60                ;
wire [31:0]       res_a_60                     ;
wire [31:0]       res_b_60                     ;
wire [7:0]        res_tag_60                   ;
wire [15:0]       wt_actv_data60               ;
wire [1:0]        wt_actv_nz60                 ;
// ------ signals of Instance: u_mul_61 ------
wire [15:0]       dat_actv_data61              ;
wire [1:0]        dat_actv_nz61                ;
wire [31:0]       res_a_61                     ;
wire [31:0]       res_b_61                     ;
wire [7:0]        res_tag_61                   ;
wire [15:0]       wt_actv_data61               ;
wire [1:0]        wt_actv_nz61                 ;
// ------ signals of Instance: u_mul_62 ------
wire [15:0]       dat_actv_data62              ;
wire [1:0]        dat_actv_nz62                ;
wire [31:0]       res_a_62                     ;
wire [31:0]       res_b_62                     ;
wire [7:0]        res_tag_62                   ;
wire [15:0]       wt_actv_data62               ;
wire [1:0]        wt_actv_nz62                 ;
// ------ signals of Instance: u_mul_63 ------
wire [15:0]       dat_actv_data63              ;
wire [1:0]        dat_actv_nz63                ;
wire [31:0]       res_a_63                     ;
wire [31:0]       res_b_63                     ;
wire [7:0]        res_tag_63                   ;
wire [15:0]       wt_actv_data63               ;
wire [1:0]        wt_actv_nz63                 ;
// ------ signals of Instance: u_mul_7 ------
wire [15:0]       dat_actv_data7               ;
wire [1:0]        dat_actv_nz7                 ;
wire [31:0]       res_a_07                     ;
wire [31:0]       res_b_07                     ;
wire [7:0]        res_tag_7                    ;
wire [15:0]       wt_actv_data7                ;
wire [1:0]        wt_actv_nz07                 ;
// ------ signals of Instance: u_mul_8 ------
wire [15:0]       dat_actv_data8               ;
wire [1:0]        dat_actv_nz8                 ;
wire [31:0]       res_a_08                     ;
wire [31:0]       res_b_08                     ;
wire [7:0]        res_tag_8                    ;
wire [15:0]       wt_actv_data8                ;
wire [1:0]        wt_actv_nz08                 ;
// ------ signals of Instance: u_mul_9 ------
wire [15:0]       dat_actv_data9               ;
wire [1:0]        dat_actv_nz9                 ;
wire [31:0]       res_a_09                     ;
wire [31:0]       res_b_09                     ;
wire [7:0]        res_tag_9                    ;
wire [15:0]       wt_actv_data9                ;
wire [1:0]        wt_actv_nz09                 ;
// ------ signals of Instance: u_my_test_design ------
wire [ 1:0]       My_clk                       ;
wire [0:0]        My_miso_i                    ;
wire [0:0]        My_mosi_o                    ;
wire [ 1:0]       My_reset                     ;
wire [0:0]        My_sck_o                     ;
wire [0:0]        My_ss_o                      ;
wire [31:0]       PRE_PADDR_SUF                ;
wire [31:0]       PRE_PDAT_SUF                 ;
wire              PRE_PENABL_SUF               ;
wire [31:0]       PRE_PRDATA_SUF               ;
wire              PRE_PREADY_SUF               ;
wire              PRE_PSELX_SUF                ;
wire              PRE_PSLVERR_SUF              ;
// ------ signals of Instance: u_nan ------
wire [1023:0]     dat_actv_data                ;
wire [63:0]       dat_actv_nan                 ;
wire [10:0]       out_nan_mts                  ;
wire              out_nan_pvld                 ;
wire [1023:0]     wt_actv_data                 ;
wire [63:0]       wt_actv_nan                  ;
// ------ signals of Instance: u_nan & u_exp & u_mul_0 & u_mul_1 & u_mul_2 & u_mul_3 & u_mul_4 & u_mul_5 & u_mul_6 & u_mul_7 & u_mul_8 & u_mul_9 & u_mul_10 & u_mul_11 & u_mul_12 & u_mul_13 & u_mul_14 & u_mul_15 & u_mul_16 & u_mul_17 & u_mul_18 & u_mul_19 & u_mul_20 & u_mul_21 & u_mul_22 & u_mul_23 & u_mul_24 & u_mul_25 & u_mul_26 & u_mul_27 & u_mul_28 & u_mul_29 & u_mul_30 & u_mul_31 & u_mul_32 & u_mul_33 & u_mul_34 & u_mul_35 & u_mul_36 & u_mul_37 & u_mul_38 & u_mul_39 & u_mul_40 & u_mul_41 & u_mul_42 & u_mul_43 & u_mul_44 & u_mul_45 & u_mul_46 & u_mul_47 & u_mul_48 & u_mul_49 & u_mul_50 & u_mul_51 & u_mul_52 & u_mul_53 & u_mul_54 & u_mul_55 & u_mul_56 & u_mul_57 & u_mul_58 & u_mul_59 & u_mul_60 & u_mul_61 & u_mul_62 & u_mul_63 ------
wire              cfg_is_fp16                  ;
wire              cfg_reg_en                   ;
wire              nvdla_core_clk               ;
wire              nvdla_core_rstn              ;
// ------ signals of Instance: u_test_DAC ------
wire              iCLK_18_4                    ;
wire [FLASH_DATA_WIDTH-1:0] iFLASH_DATA                  ;
wire              iRST_N                       ;
wire [SDRAM_DATA_WIDTH-1:0] iSDRAM_DATA                  ;
wire [SRAM_DATA_WIDTH-1:0] iSRAM_DATA                   ;
wire              oAUD_BCK                     ;
wire [`TEST_BIT:0] oAUD_DATA                    ;
wire              oAUD_LRCK                    ;
wire [SDRAM_ADDR_WIDTH:0] oSDRAM_ADDR                  ;
wire [SRAM_ADDR_WIDTH:0] oSRAM_ADDR                   ;
// ------ signals of Instance: u_test_sys_ctrl_apb_regs ------
wire [31:0]       PADDR_SUFFIX                 ;
wire              PCLK_SUFFIX                  ;
wire              PENABLE_SUFFIX               ;
wire [31:0]       PRDATA_SUFFIX                ;
wire              PREADY_SUFFIX                ;
wire              PRESETN_SUFFIX               ;
wire              PSEL_SUFFIX                  ;
wire              PSLVERR_SUFFIX               ;
wire [31:0]       PWDATA_SUFFIX                ;
wire              PWRITE_SUFFIX                ;
wire [2:0]        sys_ctrl0_l2c_strip_mode     ;
wire [6:0]        sys_ctrl0_mem_repair_done    ;
wire [0:0]        sys_ctrl0_mem_repair_en      ;
wire [0:0]        sys_ctrl0_pdc_use_arm_ctrl   ;
wire [4:0]        sys_ctrl0_smmu_mmusid        ;
wire [3:0]        test_reg_test_field0         ;
wire [1:0]        test_reg_test_filed1         ;
//| ========================= End of Instance Wires/Regs ===============================
//| ====================================================================================

// ======================================================================
// !!!!!!!!!!!!!!!!!!!!!! Warning! Warining! Warning ! !!!!!!!!!!!!!!!!!!
// !!!!!!!!! below signals are Instance's ports no connection ! !!!!!!!!!
// !!!!!!!!! please carefully check if they're correct or need fix !!!!!!
// ======================================================================
// ---------------- instance : my_spi_Param & my_spi ---------------
//-:  output      [7:0]                dat_o
//-:   input      [2:0]                adr_i
//-:   input        [1]            IPX_clk_i
//-:  output        [1]                ack_o
//-:   input        [1]                 we_i
//-:  output        [1]             SS_O_IPX
//-:  output        [1]               inta_o
//-:   input        [1]                cyc_i
//-:   input        [1]            IPX_rst_i
//-:  output        [1]            SCK_O_IPX
//-:   input      [7:0]                dat_i
//-:  output        [1]           MOSI_O_IPX
//-:   input        [1]                stb_i
//-:   input        [1]           MISO_I_IPX
// ---------------- instance : u_Test_AFifo ---------------
//-:   input        [1]               rd_clk
//-:   input        [1]               rst_wr
//-:   input        [1]               rst_rd
//-:   input        [1]               wr_clk
// ---------------- instance : u_Test_SFifo ---------------
//-:   input        [1]                 rstn
//-:   input        [1]                 clks
// ---------------- instance : u_Test_SFifo & u_Test_AFifo ---------------
//-:   input        [1]                wr_en
//-:  output        [1]                empty
//-:   input [data_width-1:0]               wr_din
//-:  output      [1:0]              rd_dout
//-:   input        [1]                rd_en
//-:  output        [1]                 full
// ---------------- instance : u_exp ---------------
//-:   input    [191:0]            wt_sd_exp
// ---------------- instance : u_mul_0 ---------------
//-:   input     [15:0]       dat_actv_data0
//-:   input      [1:0]         wt_actv_nz00
//-:  output      [7:0]            res_tag_0
//-:   input     [15:0]        wt_actv_data0
//-:  output     [31:0]             res_b_00
//-:   input      [1:0]         dat_actv_nz0
//-:  output     [31:0]             res_a_00
// ---------------- instance : u_mul_0 & u_mul_1 & u_mul_2 & u_mul_3 & u_mul_4 & u_mul_5 & u_mul_6 & u_mul_7 & u_mul_8 & u_mul_9 & u_mul_10 & u_mul_11 & u_mul_12 & u_mul_13 & u_mul_14 & u_mul_15 & u_mul_16 & u_mul_17 & u_mul_18 & u_mul_19 & u_mul_20 & u_mul_21 & u_mul_22 & u_mul_23 & u_mul_24 & u_mul_25 & u_mul_26 & u_mul_27 & u_mul_28 & u_mul_29 & u_mul_30 & u_mul_31 & u_mul_32 & u_mul_33 & u_mul_34 & u_mul_35 & u_mul_36 & u_mul_37 & u_mul_38 & u_mul_39 & u_mul_40 & u_mul_41 & u_mul_42 & u_mul_43 & u_mul_44 & u_mul_45 & u_mul_46 & u_mul_47 & u_mul_48 & u_mul_49 & u_mul_50 & u_mul_51 & u_mul_52 & u_mul_53 & u_mul_54 & u_mul_55 & u_mul_56 & u_mul_57 & u_mul_58 & u_mul_59 & u_mul_60 & u_mul_61 & u_mul_62 & u_mul_63 ---------------
//-:   input     [63:0]        dat_actv_pvld
// ---------------- instance : u_mul_1 ---------------
//-:   input     [15:0]        wt_actv_data1
//-:   input      [1:0]         wt_actv_nz01
//-:  output      [7:0]            res_tag_1
//-:  output     [31:0]             res_b_01
//-:  output     [31:0]             res_a_01
//-:   input     [15:0]       dat_actv_data1
//-:   input      [1:0]         dat_actv_nz1
// ---------------- instance : u_mul_10 ---------------
//-:   input     [15:0]       wt_actv_data10
//-:   input     [15:0]      dat_actv_data10
//-:   input      [1:0]        dat_actv_nz10
//-:   input      [1:0]         wt_actv_nz10
//-:  output      [7:0]           res_tag_10
//-:  output     [31:0]             res_b_10
//-:  output     [31:0]             res_a_10
// ---------------- instance : u_mul_11 ---------------
//-:   input     [15:0]      dat_actv_data11
//-:   input     [15:0]       wt_actv_data11
//-:   input      [1:0]         wt_actv_nz11
//-:  output     [31:0]             res_b_11
//-:  output      [7:0]           res_tag_11
//-:  output     [31:0]             res_a_11
//-:   input      [1:0]        dat_actv_nz11
// ---------------- instance : u_mul_12 ---------------
//-:   input      [1:0]         wt_actv_nz12
//-:   input     [15:0]       wt_actv_data12
//-:  output     [31:0]             res_a_12
//-:  output     [31:0]             res_b_12
//-:   input     [15:0]      dat_actv_data12
//-:   input      [1:0]        dat_actv_nz12
//-:  output      [7:0]           res_tag_12
// ---------------- instance : u_mul_13 ---------------
//-:   input      [1:0]        dat_actv_nz13
//-:   input     [15:0]       wt_actv_data13
//-:   input      [1:0]         wt_actv_nz13
//-:  output     [31:0]             res_b_13
//-:  output     [31:0]             res_a_13
//-:  output      [7:0]           res_tag_13
//-:   input     [15:0]      dat_actv_data13
// ---------------- instance : u_mul_14 ---------------
//-:  output      [7:0]           res_tag_14
//-:   input      [1:0]        dat_actv_nz14
//-:   input     [15:0]       wt_actv_data14
//-:   input     [15:0]      dat_actv_data14
//-:   input      [1:0]         wt_actv_nz14
//-:  output     [31:0]             res_b_14
//-:  output     [31:0]             res_a_14
// ---------------- instance : u_mul_15 ---------------
//-:   input      [1:0]        dat_actv_nz15
//-:  output     [31:0]             res_b_15
//-:   input     [15:0]      dat_actv_data15
//-:  output     [31:0]             res_a_15
//-:   input     [15:0]       wt_actv_data15
//-:   input      [1:0]         wt_actv_nz15
//-:  output      [7:0]           res_tag_15
// ---------------- instance : u_mul_16 ---------------
//-:   input     [15:0]       wt_actv_data16
//-:  output      [7:0]           res_tag_16
//-:   input      [1:0]        dat_actv_nz16
//-:   input     [15:0]      dat_actv_data16
//-:  output     [31:0]             res_a_16
//-:   input      [1:0]         wt_actv_nz16
//-:  output     [31:0]             res_b_16
// ---------------- instance : u_mul_17 ---------------
//-:   input     [15:0]      dat_actv_data17
//-:   input      [1:0]        dat_actv_nz17
//-:   input      [1:0]         wt_actv_nz17
//-:  output     [31:0]             res_a_17
//-:   input     [15:0]       wt_actv_data17
//-:  output     [31:0]             res_b_17
//-:  output      [7:0]           res_tag_17
// ---------------- instance : u_mul_18 ---------------
//-:  output     [31:0]             res_b_18
//-:  output     [31:0]             res_a_18
//-:   input      [1:0]        dat_actv_nz18
//-:  output      [7:0]           res_tag_18
//-:   input     [15:0]       wt_actv_data18
//-:   input      [1:0]         wt_actv_nz18
//-:   input     [15:0]      dat_actv_data18
// ---------------- instance : u_mul_19 ---------------
//-:   input      [1:0]         wt_actv_nz19
//-:   input     [15:0]      dat_actv_data19
//-:   input      [1:0]        dat_actv_nz19
//-:  output     [31:0]             res_a_19
//-:  output      [7:0]           res_tag_19
//-:  output     [31:0]             res_b_19
//-:   input     [15:0]       wt_actv_data19
// ---------------- instance : u_mul_2 ---------------
//-:  output      [7:0]            res_tag_2
//-:   input      [1:0]         wt_actv_nz02
//-:  output     [31:0]             res_b_02
//-:  output     [31:0]             res_a_02
//-:   input     [15:0]       dat_actv_data2
//-:   input     [15:0]        wt_actv_data2
//-:   input      [1:0]         dat_actv_nz2
// ---------------- instance : u_mul_20 ---------------
//-:   input     [15:0]       wt_actv_data20
//-:   input      [1:0]        dat_actv_nz20
//-:  output     [31:0]             res_b_20
//-:   input     [15:0]      dat_actv_data20
//-:  output     [31:0]             res_a_20
//-:  output      [7:0]           res_tag_20
//-:   input      [1:0]         wt_actv_nz20
// ---------------- instance : u_mul_21 ---------------
//-:  output     [31:0]             res_a_21
//-:   input      [1:0]         wt_actv_nz21
//-:  output      [7:0]           res_tag_21
//-:  output     [31:0]             res_b_21
//-:   input      [1:0]        dat_actv_nz21
//-:   input     [15:0]       wt_actv_data21
//-:   input     [15:0]      dat_actv_data21
// ---------------- instance : u_mul_22 ---------------
//-:   input     [15:0]      dat_actv_data22
//-:  output      [7:0]           res_tag_22
//-:  output     [31:0]             res_b_22
//-:   input      [1:0]         wt_actv_nz22
//-:   input      [1:0]        dat_actv_nz22
//-:   input     [15:0]       wt_actv_data22
//-:  output     [31:0]             res_a_22
// ---------------- instance : u_mul_23 ---------------
//-:   input     [15:0]      dat_actv_data23
//-:   input     [15:0]       wt_actv_data23
//-:   input      [1:0]         wt_actv_nz23
//-:  output      [7:0]           res_tag_23
//-:  output     [31:0]             res_b_23
//-:   input      [1:0]        dat_actv_nz23
//-:  output     [31:0]             res_a_23
// ---------------- instance : u_mul_24 ---------------
//-:  output      [7:0]           res_tag_24
//-:   input      [1:0]         wt_actv_nz24
//-:   input      [1:0]        dat_actv_nz24
//-:  output     [31:0]             res_a_24
//-:   input     [15:0]       wt_actv_data24
//-:   input     [15:0]      dat_actv_data24
//-:  output     [31:0]             res_b_24
// ---------------- instance : u_mul_25 ---------------
//-:  output      [7:0]           res_tag_25
//-:  output     [31:0]             res_a_25
//-:   input      [1:0]         wt_actv_nz25
//-:  output     [31:0]             res_b_25
//-:   input     [15:0]       wt_actv_data25
//-:   input     [15:0]      dat_actv_data25
//-:   input      [1:0]        dat_actv_nz25
// ---------------- instance : u_mul_26 ---------------
//-:  output     [31:0]             res_b_26
//-:  output     [31:0]             res_a_26
//-:   input     [15:0]       wt_actv_data26
//-:   input      [1:0]        dat_actv_nz26
//-:   input      [1:0]         wt_actv_nz26
//-:  output      [7:0]           res_tag_26
//-:   input     [15:0]      dat_actv_data26
// ---------------- instance : u_mul_27 ---------------
//-:   input      [1:0]         wt_actv_nz27
//-:  output      [7:0]           res_tag_27
//-:   input      [1:0]        dat_actv_nz27
//-:   input     [15:0]       wt_actv_data27
//-:  output     [31:0]             res_b_27
//-:   input     [15:0]      dat_actv_data27
//-:  output     [31:0]             res_a_27
// ---------------- instance : u_mul_28 ---------------
//-:  output      [7:0]           res_tag_28
//-:   input     [15:0]      dat_actv_data28
//-:   input      [1:0]         wt_actv_nz28
//-:   input     [15:0]       wt_actv_data28
//-:  output     [31:0]             res_b_28
//-:   input      [1:0]        dat_actv_nz28
//-:  output     [31:0]             res_a_28
// ---------------- instance : u_mul_29 ---------------
//-:   input      [1:0]         wt_actv_nz29
//-:   input     [15:0]      dat_actv_data29
//-:  output      [7:0]           res_tag_29
//-:  output     [31:0]             res_b_29
//-:   input     [15:0]       wt_actv_data29
//-:   input      [1:0]        dat_actv_nz29
//-:  output     [31:0]             res_a_29
// ---------------- instance : u_mul_3 ---------------
//-:   input     [15:0]        wt_actv_data3
//-:  output     [31:0]             res_a_03
//-:  output     [31:0]             res_b_03
//-:   input      [1:0]         wt_actv_nz03
//-:   input     [15:0]       dat_actv_data3
//-:  output      [7:0]            res_tag_3
//-:   input      [1:0]         dat_actv_nz3
// ---------------- instance : u_mul_30 ---------------
//-:  output      [7:0]           res_tag_30
//-:  output     [31:0]             res_b_30
//-:  output     [31:0]             res_a_30
//-:   input      [1:0]         wt_actv_nz30
//-:   input      [1:0]        dat_actv_nz30
//-:   input     [15:0]       wt_actv_data30
//-:   input     [15:0]      dat_actv_data30
// ---------------- instance : u_mul_31 ---------------
//-:   input      [1:0]        dat_actv_nz31
//-:   input      [1:0]         wt_actv_nz31
//-:   input     [15:0]       wt_actv_data31
//-:  output      [7:0]           res_tag_31
//-:  output     [31:0]             res_b_31
//-:  output     [31:0]             res_a_31
//-:   input     [15:0]      dat_actv_data31
// ---------------- instance : u_mul_32 ---------------
//-:  output     [31:0]             res_a_32
//-:   input     [15:0]       wt_actv_data32
//-:  output     [31:0]             res_b_32
//-:   input      [1:0]         wt_actv_nz32
//-:   input     [15:0]      dat_actv_data32
//-:   input      [1:0]        dat_actv_nz32
//-:  output      [7:0]           res_tag_32
// ---------------- instance : u_mul_33 ---------------
//-:   input      [1:0]        dat_actv_nz33
//-:   input     [15:0]      dat_actv_data33
//-:  output      [7:0]           res_tag_33
//-:   input     [15:0]       wt_actv_data33
//-:  output     [31:0]             res_b_33
//-:   input      [1:0]         wt_actv_nz33
//-:  output     [31:0]             res_a_33
// ---------------- instance : u_mul_34 ---------------
//-:  output     [31:0]             res_b_34
//-:   input      [1:0]         wt_actv_nz34
//-:   input      [1:0]        dat_actv_nz34
//-:  output     [31:0]             res_a_34
//-:   input     [15:0]      dat_actv_data34
//-:  output      [7:0]           res_tag_34
//-:   input     [15:0]       wt_actv_data34
// ---------------- instance : u_mul_35 ---------------
//-:   input     [15:0]      dat_actv_data35
//-:   input      [1:0]        dat_actv_nz35
//-:  output      [7:0]           res_tag_35
//-:   input      [1:0]         wt_actv_nz35
//-:  output     [31:0]             res_b_35
//-:  output     [31:0]             res_a_35
//-:   input     [15:0]       wt_actv_data35
// ---------------- instance : u_mul_36 ---------------
//-:   input      [1:0]         wt_actv_nz36
//-:  output     [31:0]             res_a_36
//-:   input     [15:0]      dat_actv_data36
//-:  output     [31:0]             res_b_36
//-:   input     [15:0]       wt_actv_data36
//-:   input      [1:0]        dat_actv_nz36
//-:  output      [7:0]           res_tag_36
// ---------------- instance : u_mul_37 ---------------
//-:  output      [7:0]           res_tag_37
//-:   input     [15:0]      dat_actv_data37
//-:   input      [1:0]        dat_actv_nz37
//-:  output     [31:0]             res_a_37
//-:  output     [31:0]             res_b_37
//-:   input      [1:0]         wt_actv_nz37
//-:   input     [15:0]       wt_actv_data37
// ---------------- instance : u_mul_38 ---------------
//-:   input     [15:0]       wt_actv_data38
//-:  output      [7:0]           res_tag_38
//-:   input      [1:0]        dat_actv_nz38
//-:  output     [31:0]             res_a_38
//-:   input      [1:0]         wt_actv_nz38
//-:  output     [31:0]             res_b_38
//-:   input     [15:0]      dat_actv_data38
// ---------------- instance : u_mul_39 ---------------
//-:  output     [31:0]             res_b_39
//-:  output      [7:0]           res_tag_39
//-:  output     [31:0]             res_a_39
//-:   input      [1:0]         wt_actv_nz39
//-:   input     [15:0]       wt_actv_data39
//-:   input     [15:0]      dat_actv_data39
//-:   input      [1:0]        dat_actv_nz39
// ---------------- instance : u_mul_4 ---------------
//-:  output     [31:0]             res_a_04
//-:   input      [1:0]         wt_actv_nz04
//-:   input     [15:0]       dat_actv_data4
//-:  output     [31:0]             res_b_04
//-:  output      [7:0]            res_tag_4
//-:   input      [1:0]         dat_actv_nz4
//-:   input     [15:0]        wt_actv_data4
// ---------------- instance : u_mul_40 ---------------
//-:   input     [15:0]       wt_actv_data40
//-:  output      [7:0]           res_tag_40
//-:   input     [15:0]      dat_actv_data40
//-:  output     [31:0]             res_b_40
//-:  output     [31:0]             res_a_40
//-:   input      [1:0]         wt_actv_nz40
//-:   input      [1:0]        dat_actv_nz40
// ---------------- instance : u_mul_41 ---------------
//-:  output     [31:0]             res_b_41
//-:  output     [31:0]             res_a_41
//-:   input     [15:0]       wt_actv_data41
//-:  output      [7:0]           res_tag_41
//-:   input      [1:0]         wt_actv_nz41
//-:   input     [15:0]      dat_actv_data41
//-:   input      [1:0]        dat_actv_nz41
// ---------------- instance : u_mul_42 ---------------
//-:  output     [31:0]             res_b_42
//-:  output     [31:0]             res_a_42
//-:   input      [1:0]         wt_actv_nz42
//-:   input     [15:0]      dat_actv_data42
//-:   input      [1:0]        dat_actv_nz42
//-:   input     [15:0]       wt_actv_data42
//-:  output      [7:0]           res_tag_42
// ---------------- instance : u_mul_43 ---------------
//-:  output     [31:0]             res_a_43
//-:  output     [31:0]             res_b_43
//-:   input      [1:0]         wt_actv_nz43
//-:  output      [7:0]           res_tag_43
//-:   input      [1:0]        dat_actv_nz43
//-:   input     [15:0]       wt_actv_data43
//-:   input     [15:0]      dat_actv_data43
// ---------------- instance : u_mul_44 ---------------
//-:  output      [7:0]           res_tag_44
//-:  output     [31:0]             res_b_44
//-:   input     [15:0]       wt_actv_data44
//-:  output     [31:0]             res_a_44
//-:   input      [1:0]         wt_actv_nz44
//-:   input      [1:0]        dat_actv_nz44
//-:   input     [15:0]      dat_actv_data44
// ---------------- instance : u_mul_45 ---------------
//-:  output     [31:0]             res_a_45
//-:   input      [1:0]         wt_actv_nz45
//-:   input     [15:0]      dat_actv_data45
//-:  output     [31:0]             res_b_45
//-:  output      [7:0]           res_tag_45
//-:   input      [1:0]        dat_actv_nz45
//-:   input     [15:0]       wt_actv_data45
// ---------------- instance : u_mul_46 ---------------
//-:   input      [1:0]         wt_actv_nz46
//-:  output      [7:0]           res_tag_46
//-:  output     [31:0]             res_a_46
//-:   input     [15:0]      dat_actv_data46
//-:  output     [31:0]             res_b_46
//-:   input      [1:0]        dat_actv_nz46
//-:   input     [15:0]       wt_actv_data46
// ---------------- instance : u_mul_47 ---------------
//-:  output      [7:0]           res_tag_47
//-:   input     [15:0]       wt_actv_data47
//-:  output     [31:0]             res_a_47
//-:   input      [1:0]         wt_actv_nz47
//-:  output     [31:0]             res_b_47
//-:   input     [15:0]      dat_actv_data47
//-:   input      [1:0]        dat_actv_nz47
// ---------------- instance : u_mul_48 ---------------
//-:   input      [1:0]         wt_actv_nz48
//-:   input     [15:0]       wt_actv_data48
//-:   input      [1:0]        dat_actv_nz48
//-:  output     [31:0]             res_b_48
//-:   input     [15:0]      dat_actv_data48
//-:  output      [7:0]           res_tag_48
//-:  output     [31:0]             res_a_48
// ---------------- instance : u_mul_49 ---------------
//-:   input      [1:0]         wt_actv_nz49
//-:  output     [31:0]             res_a_49
//-:   input     [15:0]       wt_actv_data49
//-:  output     [31:0]             res_b_49
//-:   input     [15:0]      dat_actv_data49
//-:  output      [7:0]           res_tag_49
//-:   input      [1:0]        dat_actv_nz49
// ---------------- instance : u_mul_5 ---------------
//-:  output     [31:0]             res_a_05
//-:   input      [1:0]         dat_actv_nz5
//-:  output     [31:0]             res_b_05
//-:   input     [15:0]        wt_actv_data5
//-:   input      [1:0]         wt_actv_nz05
//-:  output      [7:0]            res_tag_5
//-:   input     [15:0]       dat_actv_data5
// ---------------- instance : u_mul_50 ---------------
//-:   input      [1:0]         wt_actv_nz50
//-:   input      [1:0]        dat_actv_nz50
//-:   input     [15:0]       wt_actv_data50
//-:  output     [31:0]             res_a_50
//-:  output     [31:0]             res_b_50
//-:  output      [7:0]           res_tag_50
//-:   input     [15:0]      dat_actv_data50
// ---------------- instance : u_mul_51 ---------------
//-:   input     [15:0]      dat_actv_data51
//-:   input      [1:0]        dat_actv_nz51
//-:  output     [31:0]             res_b_51
//-:  output      [7:0]           res_tag_51
//-:  output     [31:0]             res_a_51
//-:   input      [1:0]         wt_actv_nz51
//-:   input     [15:0]       wt_actv_data51
// ---------------- instance : u_mul_52 ---------------
//-:  output     [31:0]             res_b_52
//-:   input     [15:0]      dat_actv_data52
//-:  output     [31:0]             res_a_52
//-:   input      [1:0]        dat_actv_nz52
//-:   input      [1:0]         wt_actv_nz52
//-:   input     [15:0]       wt_actv_data52
//-:  output      [7:0]           res_tag_52
// ---------------- instance : u_mul_53 ---------------
//-:   input      [1:0]         wt_actv_nz53
//-:   input     [15:0]      dat_actv_data53
//-:  output      [7:0]           res_tag_53
//-:   input      [1:0]        dat_actv_nz53
//-:   input     [15:0]       wt_actv_data53
//-:  output     [31:0]             res_a_53
//-:  output     [31:0]             res_b_53
// ---------------- instance : u_mul_54 ---------------
//-:  output     [31:0]             res_a_54
//-:  output     [31:0]             res_b_54
//-:   input      [1:0]        dat_actv_nz54
//-:   input     [15:0]       wt_actv_data54
//-:   input     [15:0]      dat_actv_data54
//-:   input      [1:0]         wt_actv_nz54
//-:  output      [7:0]           res_tag_54
// ---------------- instance : u_mul_55 ---------------
//-:  output     [31:0]             res_a_55
//-:  output     [31:0]             res_b_55
//-:   input      [1:0]         wt_actv_nz55
//-:   input     [15:0]      dat_actv_data55
//-:   input     [15:0]       wt_actv_data55
//-:  output      [7:0]           res_tag_55
//-:   input      [1:0]        dat_actv_nz55
// ---------------- instance : u_mul_56 ---------------
//-:   input     [15:0]       wt_actv_data56
//-:  output      [7:0]           res_tag_56
//-:   input      [1:0]         wt_actv_nz56
//-:   input      [1:0]        dat_actv_nz56
//-:  output     [31:0]             res_a_56
//-:  output     [31:0]             res_b_56
//-:   input     [15:0]      dat_actv_data56
// ---------------- instance : u_mul_57 ---------------
//-:  output      [7:0]           res_tag_57
//-:   input      [1:0]         wt_actv_nz57
//-:   input     [15:0]       wt_actv_data57
//-:   input     [15:0]      dat_actv_data57
//-:   input      [1:0]        dat_actv_nz57
//-:  output     [31:0]             res_b_57
//-:  output     [31:0]             res_a_57
// ---------------- instance : u_mul_58 ---------------
//-:   input     [15:0]      dat_actv_data58
//-:   input      [1:0]        dat_actv_nz58
//-:  output      [7:0]           res_tag_58
//-:   input     [15:0]       wt_actv_data58
//-:  output     [31:0]             res_b_58
//-:  output     [31:0]             res_a_58
//-:   input      [1:0]         wt_actv_nz58
// ---------------- instance : u_mul_59 ---------------
//-:   input      [1:0]        dat_actv_nz59
//-:   input      [1:0]         wt_actv_nz59
//-:   input     [15:0]      dat_actv_data59
//-:   input     [15:0]       wt_actv_data59
//-:  output      [7:0]           res_tag_59
//-:  output     [31:0]             res_a_59
//-:  output     [31:0]             res_b_59
// ---------------- instance : u_mul_6 ---------------
//-:  output      [7:0]            res_tag_6
//-:   input      [1:0]         wt_actv_nz06
//-:   input     [15:0]        wt_actv_data6
//-:   input     [15:0]       dat_actv_data6
//-:   input      [1:0]         dat_actv_nz6
//-:  output     [31:0]             res_a_06
//-:  output     [31:0]             res_b_06
// ---------------- instance : u_mul_60 ---------------
//-:   input      [1:0]         wt_actv_nz60
//-:  output      [7:0]           res_tag_60
//-:  output     [31:0]             res_a_60
//-:   input      [1:0]        dat_actv_nz60
//-:  output     [31:0]             res_b_60
//-:   input     [15:0]       wt_actv_data60
//-:   input     [15:0]      dat_actv_data60
// ---------------- instance : u_mul_61 ---------------
//-:   input     [15:0]      dat_actv_data61
//-:  output      [7:0]           res_tag_61
//-:   input      [1:0]         wt_actv_nz61
//-:   input     [15:0]       wt_actv_data61
//-:  output     [31:0]             res_b_61
//-:   input      [1:0]        dat_actv_nz61
//-:  output     [31:0]             res_a_61
// ---------------- instance : u_mul_62 ---------------
//-:  output     [31:0]             res_a_62
//-:   input     [15:0]       wt_actv_data62
//-:  output     [31:0]             res_b_62
//-:   input      [1:0]        dat_actv_nz62
//-:   input      [1:0]         wt_actv_nz62
//-:  output      [7:0]           res_tag_62
//-:   input     [15:0]      dat_actv_data62
// ---------------- instance : u_mul_63 ---------------
//-:  output      [7:0]           res_tag_63
//-:   input     [15:0]      dat_actv_data63
//-:  output     [31:0]             res_a_63
//-:   input      [1:0]         wt_actv_nz63
//-:  output     [31:0]             res_b_63
//-:   input      [1:0]        dat_actv_nz63
//-:   input     [15:0]       wt_actv_data63
// ---------------- instance : u_mul_7 ---------------
//-:  output      [7:0]            res_tag_7
//-:   input      [1:0]         wt_actv_nz07
//-:   input     [15:0]        wt_actv_data7
//-:  output     [31:0]             res_b_07
//-:   input      [1:0]         dat_actv_nz7
//-:  output     [31:0]             res_a_07
//-:   input     [15:0]       dat_actv_data7
// ---------------- instance : u_mul_8 ---------------
//-:  output     [31:0]             res_a_08
//-:   input      [1:0]         wt_actv_nz08
//-:  output     [31:0]             res_b_08
//-:   input     [15:0]        wt_actv_data8
//-:   input      [1:0]         dat_actv_nz8
//-:   input     [15:0]       dat_actv_data8
//-:  output      [7:0]            res_tag_8
// ---------------- instance : u_mul_9 ---------------
//-:   input      [1:0]         wt_actv_nz09
//-:   input     [15:0]       dat_actv_data9
//-:  output      [7:0]            res_tag_9
//-:  output     [31:0]             res_b_09
//-:   input     [15:0]        wt_actv_data9
//-:   input      [1:0]         dat_actv_nz9
//-:  output     [31:0]             res_a_09
// ---------------- instance : u_my_test_design ---------------
//-:   input     [31:0]        PRE_PADDR_SUF
//-:  output        [1]       PRE_PREADY_SUF
//-:   input      [0:0]             My_sck_o
//-:   input     [31:0]       PRE_PRDATA_SUF
//-:   input      [0:0]            My_mosi_o
//-:   input       [ 1]             My_reset
//-:   input        [1]       PRE_PENABL_SUF
//-:  output      [0:0]            My_miso_i
//-:   input        [1]        PRE_PSELX_SUF
//-:   input     [31:0]         PRE_PDAT_SUF
//-:   input        [1]      PRE_PSLVERR_SUF
//-:   input       [ 1]               My_clk
//-:   input      [0:0]              My_ss_o
// ---------------- instance : u_nan ---------------
//-:  output     [10:0]          out_nan_mts
//-:  output        [1]         out_nan_pvld
// ---------------- instance : u_test_DAC ---------------
//-:   input        [1]               iRST_N
//-:   input [FLASH_DATA_WIDTH-1:0]          iFLASH_DATA
//-:  output [`TEST_BIT:0]            oAUD_DATA
//-:  output        [1]             oAUD_BCK
//-:   input        [1]            iCLK_18_4
//-:  output [SDRAM_ADDR_WIDTH:0]          oSDRAM_ADDR
//-:  output [SRAM_ADDR_WIDTH:0]           oSRAM_ADDR
//-:  output        [1]            oAUD_LRCK
//-:   input [SRAM_DATA_WIDTH-1:0]           iSRAM_DATA
//-:   input [SDRAM_DATA_WIDTH-1:0]          iSDRAM_DATA
// ---------------- instance : u_test_sys_ctrl_apb_regs ---------------
//-:   input     [31:0]        PWDATA_SUFFIX
//-:  output      [1:0] test_reg_test_filed1
//-:  output        [1]        PREADY_SUFFIX
//-:  output      [2:0] sys_ctrl0_l2c_strip_mode
//-:  output        [1]       PSLVERR_SUFFIX
//-:   input        [1]       PENABLE_SUFFIX
//-:   input        [1]       PRESETN_SUFFIX
//-:   input     [31:0]         PADDR_SUFFIX
//-:  output      [0:0] sys_ctrl0_pdc_use_arm_ctrl
//-:   input        [1]          PSEL_SUFFIX
//-:  output      [3:0] test_reg_test_field0
//-:   input        [1]        PWRITE_SUFFIX
//-:  output     [31:0]        PRDATA_SUFFIX
//-:  output      [4:0] sys_ctrl0_smmu_mmusid
//-:  output      [6:0] sys_ctrl0_mem_repair_done
//-:  output      [0:0] sys_ctrl0_mem_repair_en
//-:   input        [1]          PCLK_SUFFIX
// ======================================================================
// ==================== End of Unconnected Ports ========================
// ======================================================================

// ========================================================================================

reg     [65:0] dbg_sign;
reg      [3:0] exp_max;
reg            exp_pvld;

// ========================================================================================
//// Sample to update search path for config & design files
// ========================================================================================

// ========================================================================================
// Sample for single line script
// ========================================================================================
// wire      [3:0] exp_sft_00;
// ..
//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//| for my $i (0..63) {
//|    print("wire [7:0] exp_test_$i;\n");
//|  }
wire [7:0] exp_test_0;
wire [7:0] exp_test_1;
wire [7:0] exp_test_2;
wire [7:0] exp_test_3;
wire [7:0] exp_test_4;
wire [7:0] exp_test_5;
wire [7:0] exp_test_6;
wire [7:0] exp_test_7;
wire [7:0] exp_test_8;
wire [7:0] exp_test_9;
wire [7:0] exp_test_10;
wire [7:0] exp_test_11;
wire [7:0] exp_test_12;
wire [7:0] exp_test_13;
wire [7:0] exp_test_14;
wire [7:0] exp_test_15;
wire [7:0] exp_test_16;
wire [7:0] exp_test_17;
wire [7:0] exp_test_18;
wire [7:0] exp_test_19;
wire [7:0] exp_test_20;
wire [7:0] exp_test_21;
wire [7:0] exp_test_22;
wire [7:0] exp_test_23;
wire [7:0] exp_test_24;
wire [7:0] exp_test_25;
wire [7:0] exp_test_26;
wire [7:0] exp_test_27;
wire [7:0] exp_test_28;
wire [7:0] exp_test_29;
wire [7:0] exp_test_30;
wire [7:0] exp_test_31;
wire [7:0] exp_test_32;
wire [7:0] exp_test_33;
wire [7:0] exp_test_34;
wire [7:0] exp_test_35;
wire [7:0] exp_test_36;
wire [7:0] exp_test_37;
wire [7:0] exp_test_38;
wire [7:0] exp_test_39;
wire [7:0] exp_test_40;
wire [7:0] exp_test_41;
wire [7:0] exp_test_42;
wire [7:0] exp_test_43;
wire [7:0] exp_test_44;
wire [7:0] exp_test_45;
wire [7:0] exp_test_46;
wire [7:0] exp_test_47;
wire [7:0] exp_test_48;
wire [7:0] exp_test_49;
wire [7:0] exp_test_50;
wire [7:0] exp_test_51;
wire [7:0] exp_test_52;
wire [7:0] exp_test_53;
wire [7:0] exp_test_54;
wire [7:0] exp_test_55;
wire [7:0] exp_test_56;
wire [7:0] exp_test_57;
wire [7:0] exp_test_58;
wire [7:0] exp_test_59;
wire [7:0] exp_test_60;
wire [7:0] exp_test_61;
wire [7:0] exp_test_62;
wire [7:0] exp_test_63;
//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---

// wire      [3:0] exp_sft_63;
//

// ========================================================================================
// Sample for multi-line script
// ========================================================================================
//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//|     for my $i (0..3) {
//|        print("wire [15:0] test_data$i;\n");
//|        print "wire [15:0] test_DATA$i;";
//|     }
wire [15:0] test_data0;
wire [15:0] test_DATA0;
wire [15:0] test_data1;
wire [15:0] test_DATA1;
wire [15:0] test_data2;
wire [15:0] test_DATA2;
wire [15:0] test_data3;
wire [15:0] test_DATA3;
//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---



// ========================================================================================
// Sample for multi-line script
// ========================================================================================
//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//|   for my $i (0..5) {
//|       for my $j (0..9) {
//|           print("reg      [35:0] pp_in_l0_a_${i}${j};\n");
//|           print("reg      [35:0] pp_in_l0_b_${i}${j};\n");
//| 	  }
//|   }
reg      [35:0] pp_in_l0_a_00;
reg      [35:0] pp_in_l0_b_00;
reg      [35:0] pp_in_l0_a_01;
reg      [35:0] pp_in_l0_b_01;
reg      [35:0] pp_in_l0_a_02;
reg      [35:0] pp_in_l0_b_02;
reg      [35:0] pp_in_l0_a_03;
reg      [35:0] pp_in_l0_b_03;
reg      [35:0] pp_in_l0_a_04;
reg      [35:0] pp_in_l0_b_04;
reg      [35:0] pp_in_l0_a_05;
reg      [35:0] pp_in_l0_b_05;
reg      [35:0] pp_in_l0_a_06;
reg      [35:0] pp_in_l0_b_06;
reg      [35:0] pp_in_l0_a_07;
reg      [35:0] pp_in_l0_b_07;
reg      [35:0] pp_in_l0_a_08;
reg      [35:0] pp_in_l0_b_08;
reg      [35:0] pp_in_l0_a_09;
reg      [35:0] pp_in_l0_b_09;
reg      [35:0] pp_in_l0_a_10;
reg      [35:0] pp_in_l0_b_10;
reg      [35:0] pp_in_l0_a_11;
reg      [35:0] pp_in_l0_b_11;
reg      [35:0] pp_in_l0_a_12;
reg      [35:0] pp_in_l0_b_12;
reg      [35:0] pp_in_l0_a_13;
reg      [35:0] pp_in_l0_b_13;
reg      [35:0] pp_in_l0_a_14;
reg      [35:0] pp_in_l0_b_14;
reg      [35:0] pp_in_l0_a_15;
reg      [35:0] pp_in_l0_b_15;
reg      [35:0] pp_in_l0_a_16;
reg      [35:0] pp_in_l0_b_16;
reg      [35:0] pp_in_l0_a_17;
reg      [35:0] pp_in_l0_b_17;
reg      [35:0] pp_in_l0_a_18;
reg      [35:0] pp_in_l0_b_18;
reg      [35:0] pp_in_l0_a_19;
reg      [35:0] pp_in_l0_b_19;
reg      [35:0] pp_in_l0_a_20;
reg      [35:0] pp_in_l0_b_20;
reg      [35:0] pp_in_l0_a_21;
reg      [35:0] pp_in_l0_b_21;
reg      [35:0] pp_in_l0_a_22;
reg      [35:0] pp_in_l0_b_22;
reg      [35:0] pp_in_l0_a_23;
reg      [35:0] pp_in_l0_b_23;
reg      [35:0] pp_in_l0_a_24;
reg      [35:0] pp_in_l0_b_24;
reg      [35:0] pp_in_l0_a_25;
reg      [35:0] pp_in_l0_b_25;
reg      [35:0] pp_in_l0_a_26;
reg      [35:0] pp_in_l0_b_26;
reg      [35:0] pp_in_l0_a_27;
reg      [35:0] pp_in_l0_b_27;
reg      [35:0] pp_in_l0_a_28;
reg      [35:0] pp_in_l0_b_28;
reg      [35:0] pp_in_l0_a_29;
reg      [35:0] pp_in_l0_b_29;
reg      [35:0] pp_in_l0_a_30;
reg      [35:0] pp_in_l0_b_30;
reg      [35:0] pp_in_l0_a_31;
reg      [35:0] pp_in_l0_b_31;
reg      [35:0] pp_in_l0_a_32;
reg      [35:0] pp_in_l0_b_32;
reg      [35:0] pp_in_l0_a_33;
reg      [35:0] pp_in_l0_b_33;
reg      [35:0] pp_in_l0_a_34;
reg      [35:0] pp_in_l0_b_34;
reg      [35:0] pp_in_l0_a_35;
reg      [35:0] pp_in_l0_b_35;
reg      [35:0] pp_in_l0_a_36;
reg      [35:0] pp_in_l0_b_36;
reg      [35:0] pp_in_l0_a_37;
reg      [35:0] pp_in_l0_b_37;
reg      [35:0] pp_in_l0_a_38;
reg      [35:0] pp_in_l0_b_38;
reg      [35:0] pp_in_l0_a_39;
reg      [35:0] pp_in_l0_b_39;
reg      [35:0] pp_in_l0_a_40;
reg      [35:0] pp_in_l0_b_40;
reg      [35:0] pp_in_l0_a_41;
reg      [35:0] pp_in_l0_b_41;
reg      [35:0] pp_in_l0_a_42;
reg      [35:0] pp_in_l0_b_42;
reg      [35:0] pp_in_l0_a_43;
reg      [35:0] pp_in_l0_b_43;
reg      [35:0] pp_in_l0_a_44;
reg      [35:0] pp_in_l0_b_44;
reg      [35:0] pp_in_l0_a_45;
reg      [35:0] pp_in_l0_b_45;
reg      [35:0] pp_in_l0_a_46;
reg      [35:0] pp_in_l0_b_46;
reg      [35:0] pp_in_l0_a_47;
reg      [35:0] pp_in_l0_b_47;
reg      [35:0] pp_in_l0_a_48;
reg      [35:0] pp_in_l0_b_48;
reg      [35:0] pp_in_l0_a_49;
reg      [35:0] pp_in_l0_b_49;
reg      [35:0] pp_in_l0_a_50;
reg      [35:0] pp_in_l0_b_50;
reg      [35:0] pp_in_l0_a_51;
reg      [35:0] pp_in_l0_b_51;
reg      [35:0] pp_in_l0_a_52;
reg      [35:0] pp_in_l0_b_52;
reg      [35:0] pp_in_l0_a_53;
reg      [35:0] pp_in_l0_b_53;
reg      [35:0] pp_in_l0_a_54;
reg      [35:0] pp_in_l0_b_54;
reg      [35:0] pp_in_l0_a_55;
reg      [35:0] pp_in_l0_b_55;
reg      [35:0] pp_in_l0_a_56;
reg      [35:0] pp_in_l0_b_56;
reg      [35:0] pp_in_l0_a_57;
reg      [35:0] pp_in_l0_b_57;
reg      [35:0] pp_in_l0_a_58;
reg      [35:0] pp_in_l0_b_58;
reg      [35:0] pp_in_l0_a_59;
reg      [35:0] pp_in_l0_b_59;
//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---


// ========================================================================================
// Sample for DTI interface generation
// ========================================================================================
//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//| &DTIWire("top2dp", 512);
wire top2dp_valid;
wire top2dp_ready;
wire [512-1:0] top2dp_data;
//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---



//wire [63:0] res_tag_b0;
wire [63:0] res_tag_b1;
wire [63:0] res_tag_b2;
wire [63:0] res_tag_b3;
wire [63:0] res_tag_b4;
wire [63:0] res_tag_b5;
wire [63:0] res_tag_b6;
wire [63:0] res_tag_b7;



// ========================================================================================
// Sample for Python script
// ========================================================================================
//|# ePython generated code Begin (DO NOT EDIT BELOW!)
//#for i in [0,1,2,3,4,5,6,7]:
//#       print("wire [63:0] test_PY_data%d;" % i )
wire [63:0] test_PY_data0;
wire [63:0] test_PY_data1;
wire [63:0] test_PY_data2;
wire [63:0] test_PY_data3;
wire [63:0] test_PY_data4;
wire [63:0] test_PY_data5;
wire [63:0] test_PY_data6;
wire [63:0] test_PY_data7;
//|# ePython generated code End (DO NOT EDIT ABOVE!)

// ========================================================================================


    
//==============================================================================
// MAC support Winograd post addition (POA).
// It's a 2-level matrix muliplication implemented by adders.
// Fomular of POA are:
//
//                    | pp_out_00, pp_out_01, pp_out_02, pp_out_03 |  | 1   0 |
// | 1,  1,  1,  0 |  | pp_out_04, pp_out_05, pp_out_06, pp_out_07 |  | 1,  1 |
// | 0,  1, -1, -1 |  | pp_out_08, pp_out_09, pp_out_10, pp_out_11 |  | 1, -1 |
//                    | pp_out_12, pp_out_13, pp_out_14, pp_out_15 |  | 0, -1 |
//
//==============================================================================


// ========================================================================================
// Sample for Instance function
//==========================================================
// Sub unit to handle fp16 NaN 
//==========================================================
//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//| &Instance NV_NVDLA_CMAC_CORE_MAC_nan u_nan;
NV_NVDLA_CMAC_CORE_MAC_nan  u_nan (
    .nvdla_core_clk  (nvdla_core_clk        ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn       ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16           ), //|<-i
    .cfg_reg_en      (cfg_reg_en            ), //|<-i
    .dat_actv_data   (dat_actv_data[1023:0] ), //|<-i
    .dat_actv_nan    (dat_actv_nan[63:0]    ), //|<-i
    .wt_actv_data    (wt_actv_data[1023:0]  ), //|<-i
    .wt_actv_nan     (wt_actv_nan[63:0]     ), //|<-i
    .out_nan_mts     (out_nan_mts[10:0]     ), //|>-o
    .out_nan_pvld    (out_nan_pvld          )  //|>-o
   );

//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---


// ========================================================================================
// Sample for Instance function
//==========================================================
// Fp16 exponent pre-calculaiton instant
//==========================================================
//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//| &Instance NV_NVDLA_CMAC_CORE_MAC_exp u_exp;
NV_NVDLA_CMAC_CORE_MAC_exp  u_exp (
    .nvdla_core_clk     (nvdla_core_clk           ), //|<-i
    .nvdla_core_rstn    (nvdla_core_rstn          ), //|<-i
    .cfg_is_fp16        (cfg_is_fp16              ), //|<-i
    .cfg_reg_en         (cfg_reg_en               ), //|<-i
    .dat_pre_exp        (dat_pre_exp[191:0]       ), //|<-i
    .dat_pre_mask       (dat_pre_mask[63:0]       ), //|<-i
    .dat_pre_pvld       (dat_pre_pvld             ), //|<-i
    .dat_pre_stripe_end (dat_pre_stripe_end       ), //|<-i
    .dat_pre_stripe_st  (dat_pre_stripe_st        ), //|<-i
    .wt_sd_exp          (wt_sd_exp[191:0]         ), //|<-i
    .wt_sd_mask         (wt_sd_mask[63:0]         ), //|<-i
    .wt_sd_pvld         (wt_sd_pvld               ), //|<-i
    .exp_max            (exp_max[3:0]             ), //|>-o
    .exp_pvld           (exp_pvld                 ), //|>-o
    .exp_sft_00         (exp_sft_00[3:0]          ), //|>-o
    .exp_sft_01         (exp_sft_01[3:0]          ), //|>-o
    .exp_sft_02         (exp_sft_02[3:0]          ), //|>-o
    .exp_sft_03         (exp_sft_03[3:0]          ), //|>-o
    .exp_sft_04         (exp_sft_04[3:0]          ), //|>-o
    .exp_sft_05         (exp_sft_05[3:0]          ), //|>-o
    .exp_sft_06         (exp_sft_06[3:0]          ), //|>-o
    .exp_sft_07         (exp_sft_07[3:0]          ), //|>-o
    .exp_sft_08         (exp_sft_08[3:0]          ), //|>-o
    .exp_sft_09         (exp_sft_09[3:0]          ), //|>-o
    .exp_sft_10         (exp_sft_10[3:0]          ), //|>-o
    .exp_sft_11         (exp_sft_11[3:0]          ), //|>-o
    .exp_sft_12         (exp_sft_12[3:0]          ), //|>-o
    .exp_sft_13         (exp_sft_13[3:0]          ), //|>-o
    .exp_sft_14         (exp_sft_14[3:0]          ), //|>-o
    .exp_sft_15         (exp_sft_15[3:0]          ), //|>-o
    .exp_sft_16         (exp_sft_16[3:0]          ), //|>-o
    .exp_sft_17         (exp_sft_17[3:0]          ), //|>-o
    .exp_sft_18         (exp_sft_18[3:0]          ), //|>-o
    .exp_sft_19         (exp_sft_19[3:0]          ), //|>-o
    .exp_sft_20         (exp_sft_20[3:0]          ), //|>-o
    .exp_sft_21         (exp_sft_21[3:0]          ), //|>-o
    .exp_sft_22         (exp_sft_22[3:0]          ), //|>-o
    .exp_sft_23         (exp_sft_23[3:0]          ), //|>-o
    .exp_sft_24         (exp_sft_24[3:0]          ), //|>-o
    .exp_sft_25         (exp_sft_25[3:0]          ), //|>-o
    .exp_sft_26         (exp_sft_26[3:0]          ), //|>-o
    .exp_sft_27         (exp_sft_27[3:0]          ), //|>-o
    .exp_sft_28         (exp_sft_28[3:0]          ), //|>-o
    .exp_sft_29         (exp_sft_29[3:0]          ), //|>-o
    .exp_sft_30         (exp_sft_30[3:0]          ), //|>-o
    .exp_sft_31         (exp_sft_31[3:0]          ), //|>-o
    .exp_sft_32         (exp_sft_32[3:0]          ), //|>-o
    .exp_sft_33         (exp_sft_33[3:0]          ), //|>-o
    .exp_sft_34         (exp_sft_34[3:0]          ), //|>-o
    .exp_sft_35         (exp_sft_35[3:0]          ), //|>-o
    .exp_sft_36         (exp_sft_36[3:0]          ), //|>-o
    .exp_sft_37         (exp_sft_37[3:0]          ), //|>-o
    .exp_sft_38         (exp_sft_38[3:0]          ), //|>-o
    .exp_sft_39         (exp_sft_39[3:0]          ), //|>-o
    .exp_sft_40         (exp_sft_40[3:0]          ), //|>-o
    .exp_sft_41         (exp_sft_41[3:0]          ), //|>-o
    .exp_sft_42         (exp_sft_42[3:0]          ), //|>-o
    .exp_sft_43         (exp_sft_43[3:0]          ), //|>-o
    .exp_sft_44         (exp_sft_44[3:0]          ), //|>-o
    .exp_sft_45         (exp_sft_45[3:0]          ), //|>-o
    .exp_sft_46         (exp_sft_46[3:0]          ), //|>-o
    .exp_sft_47         (exp_sft_47[3:0]          ), //|>-o
    .exp_sft_48         (exp_sft_48[3:0]          ), //|>-o
    .exp_sft_49         (exp_sft_49[3:0]          ), //|>-o
    .exp_sft_50         (exp_sft_50[3:0]          ), //|>-o
    .exp_sft_51         (exp_sft_51[3:0]          ), //|>-o
    .exp_sft_52         (exp_sft_52[3:0]          ), //|>-o
    .exp_sft_53         (exp_sft_53[3:0]          ), //|>-o
    .exp_sft_54         (exp_sft_54[3:0]          ), //|>-o
    .exp_sft_55         (exp_sft_55[3:0]          ), //|>-o
    .exp_sft_56         (exp_sft_56[3:0]          ), //|>-o
    .exp_sft_57         (exp_sft_57[3:0]          ), //|>-o
    .exp_sft_58         (exp_sft_58[3:0]          ), //|>-o
    .exp_sft_59         (exp_sft_59[3:0]          ), //|>-o
    .exp_sft_60         (exp_sft_60[3:0]          ), //|>-o
    .exp_sft_61         (exp_sft_61[3:0]          ), //|>-o
    .exp_sft_62         (exp_sft_62[3:0]          ), //|>-o
    .exp_sft_63         (exp_sft_63[3:0]          )  //|>-o
   );

//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---


//==========================================================
// Single multiplication instances
//==========================================================


always @(
  wt_actv_data
  ) begin
    {wt_actv_data63, wt_actv_data62, wt_actv_data61, wt_actv_data60, wt_actv_data59, wt_actv_data58, wt_actv_data57, wt_actv_data56, wt_actv_data55, wt_actv_data54, wt_actv_data53, wt_actv_data52, wt_actv_data51, wt_actv_data50, wt_actv_data49, wt_actv_data48, wt_actv_data47, wt_actv_data46, wt_actv_data45, wt_actv_data44, wt_actv_data43, wt_actv_data42, wt_actv_data41, wt_actv_data40, wt_actv_data39, wt_actv_data38, wt_actv_data37, wt_actv_data36, wt_actv_data35, wt_actv_data34, wt_actv_data33, wt_actv_data32, wt_actv_data31, wt_actv_data30, wt_actv_data29, wt_actv_data28, wt_actv_data27, wt_actv_data26, wt_actv_data25, wt_actv_data24, wt_actv_data23, wt_actv_data22, wt_actv_data21, wt_actv_data20, wt_actv_data19, wt_actv_data18, wt_actv_data17, wt_actv_data16, wt_actv_data15, wt_actv_data14, wt_actv_data13, wt_actv_data12, wt_actv_data11, wt_actv_data10, wt_actv_data9, wt_actv_data8, wt_actv_data7, wt_actv_data6, wt_actv_data5, wt_actv_data4, wt_actv_data3, wt_actv_data2, wt_actv_data1, wt_actv_data0} = wt_actv_data;
end

// ========================================================================================
// Sample for script with for loop and structural connections
// ========================================================================================
//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//|     for my $i (0..63) {
//| 		my $ii = sprintf("%02d",$i);
//| 	    &Instance NV_NVDLA_CMAC_CORE_MAC_mul u_mul_$i;
//|           &Connect exp_sft      exp_sft_$ii;
//|            Connect op_a_dat     wt_actv_data${i};
//|            Connect op_a_nz      wt_actv_nz${ii};
//|            Connect op_a_pvld     wt_actv_pvld[${i}];
//|           &Connect op_b_dat     dat_actv_data${i};
//|           &Connect op_b_nz      dat_actv_nz${i};
//|           &Connect op_b_pvld     dat_actv_pvld[${i}];
//|            Connect /(res_.*)/    \${1}_$ii;
//|            Connect -final (res_tag)    \${1}_$i; ### override above line
//| 
//| 	}
NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_0 (
    .nvdla_core_clk  (nvdla_core_clk         ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn        ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16            ), //|<-i
    .cfg_is_int8     (cfg_is_int8            ), //|<-i
    .cfg_reg_en      (cfg_reg_en             ), //|<-i
    .exp_sft         (exp_sft_00[3:0]        ), //|<-i
    .op_a_dat        (wt_actv_data0[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz00[1:0]      ), //|<-i
    .op_a_pvld       (wt_actv_pvld[0]        ), //|<-i
    .op_b_dat        (dat_actv_data0[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz0[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[0]       ), //|<-i
    .res_a           (res_a_00[31:0]         ), //|>-o
    .res_b           (res_b_00[31:0]         ), //|>-o
    .res_tag         (res_tag_0[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_1 (
    .nvdla_core_clk  (nvdla_core_clk         ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn        ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16            ), //|<-i
    .cfg_is_int8     (cfg_is_int8            ), //|<-i
    .cfg_reg_en      (cfg_reg_en             ), //|<-i
    .exp_sft         (exp_sft_01[3:0]        ), //|<-i
    .op_a_dat        (wt_actv_data1[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz01[1:0]      ), //|<-i
    .op_a_pvld       (wt_actv_pvld[1]        ), //|<-i
    .op_b_dat        (dat_actv_data1[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz1[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[1]       ), //|<-i
    .res_a           (res_a_01[31:0]         ), //|>-o
    .res_b           (res_b_01[31:0]         ), //|>-o
    .res_tag         (res_tag_1[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_2 (
    .nvdla_core_clk  (nvdla_core_clk         ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn        ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16            ), //|<-i
    .cfg_is_int8     (cfg_is_int8            ), //|<-i
    .cfg_reg_en      (cfg_reg_en             ), //|<-i
    .exp_sft         (exp_sft_02[3:0]        ), //|<-i
    .op_a_dat        (wt_actv_data2[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz02[1:0]      ), //|<-i
    .op_a_pvld       (wt_actv_pvld[2]        ), //|<-i
    .op_b_dat        (dat_actv_data2[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz2[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[2]       ), //|<-i
    .res_a           (res_a_02[31:0]         ), //|>-o
    .res_b           (res_b_02[31:0]         ), //|>-o
    .res_tag         (res_tag_2[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_3 (
    .nvdla_core_clk  (nvdla_core_clk         ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn        ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16            ), //|<-i
    .cfg_is_int8     (cfg_is_int8            ), //|<-i
    .cfg_reg_en      (cfg_reg_en             ), //|<-i
    .exp_sft         (exp_sft_03[3:0]        ), //|<-i
    .op_a_dat        (wt_actv_data3[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz03[1:0]      ), //|<-i
    .op_a_pvld       (wt_actv_pvld[3]        ), //|<-i
    .op_b_dat        (dat_actv_data3[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz3[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[3]       ), //|<-i
    .res_a           (res_a_03[31:0]         ), //|>-o
    .res_b           (res_b_03[31:0]         ), //|>-o
    .res_tag         (res_tag_3[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_4 (
    .nvdla_core_clk  (nvdla_core_clk         ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn        ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16            ), //|<-i
    .cfg_is_int8     (cfg_is_int8            ), //|<-i
    .cfg_reg_en      (cfg_reg_en             ), //|<-i
    .exp_sft         (exp_sft_04[3:0]        ), //|<-i
    .op_a_dat        (wt_actv_data4[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz04[1:0]      ), //|<-i
    .op_a_pvld       (wt_actv_pvld[4]        ), //|<-i
    .op_b_dat        (dat_actv_data4[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz4[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[4]       ), //|<-i
    .res_a           (res_a_04[31:0]         ), //|>-o
    .res_b           (res_b_04[31:0]         ), //|>-o
    .res_tag         (res_tag_4[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_5 (
    .nvdla_core_clk  (nvdla_core_clk         ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn        ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16            ), //|<-i
    .cfg_is_int8     (cfg_is_int8            ), //|<-i
    .cfg_reg_en      (cfg_reg_en             ), //|<-i
    .exp_sft         (exp_sft_05[3:0]        ), //|<-i
    .op_a_dat        (wt_actv_data5[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz05[1:0]      ), //|<-i
    .op_a_pvld       (wt_actv_pvld[5]        ), //|<-i
    .op_b_dat        (dat_actv_data5[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz5[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[5]       ), //|<-i
    .res_a           (res_a_05[31:0]         ), //|>-o
    .res_b           (res_b_05[31:0]         ), //|>-o
    .res_tag         (res_tag_5[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_6 (
    .nvdla_core_clk  (nvdla_core_clk         ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn        ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16            ), //|<-i
    .cfg_is_int8     (cfg_is_int8            ), //|<-i
    .cfg_reg_en      (cfg_reg_en             ), //|<-i
    .exp_sft         (exp_sft_06[3:0]        ), //|<-i
    .op_a_dat        (wt_actv_data6[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz06[1:0]      ), //|<-i
    .op_a_pvld       (wt_actv_pvld[6]        ), //|<-i
    .op_b_dat        (dat_actv_data6[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz6[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[6]       ), //|<-i
    .res_a           (res_a_06[31:0]         ), //|>-o
    .res_b           (res_b_06[31:0]         ), //|>-o
    .res_tag         (res_tag_6[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_7 (
    .nvdla_core_clk  (nvdla_core_clk         ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn        ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16            ), //|<-i
    .cfg_is_int8     (cfg_is_int8            ), //|<-i
    .cfg_reg_en      (cfg_reg_en             ), //|<-i
    .exp_sft         (exp_sft_07[3:0]        ), //|<-i
    .op_a_dat        (wt_actv_data7[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz07[1:0]      ), //|<-i
    .op_a_pvld       (wt_actv_pvld[7]        ), //|<-i
    .op_b_dat        (dat_actv_data7[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz7[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[7]       ), //|<-i
    .res_a           (res_a_07[31:0]         ), //|>-o
    .res_b           (res_b_07[31:0]         ), //|>-o
    .res_tag         (res_tag_7[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_8 (
    .nvdla_core_clk  (nvdla_core_clk         ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn        ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16            ), //|<-i
    .cfg_is_int8     (cfg_is_int8            ), //|<-i
    .cfg_reg_en      (cfg_reg_en             ), //|<-i
    .exp_sft         (exp_sft_08[3:0]        ), //|<-i
    .op_a_dat        (wt_actv_data8[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz08[1:0]      ), //|<-i
    .op_a_pvld       (wt_actv_pvld[8]        ), //|<-i
    .op_b_dat        (dat_actv_data8[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz8[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[8]       ), //|<-i
    .res_a           (res_a_08[31:0]         ), //|>-o
    .res_b           (res_b_08[31:0]         ), //|>-o
    .res_tag         (res_tag_8[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_9 (
    .nvdla_core_clk  (nvdla_core_clk         ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn        ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16            ), //|<-i
    .cfg_is_int8     (cfg_is_int8            ), //|<-i
    .cfg_reg_en      (cfg_reg_en             ), //|<-i
    .exp_sft         (exp_sft_09[3:0]        ), //|<-i
    .op_a_dat        (wt_actv_data9[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz09[1:0]      ), //|<-i
    .op_a_pvld       (wt_actv_pvld[9]        ), //|<-i
    .op_b_dat        (dat_actv_data9[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz9[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[9]       ), //|<-i
    .res_a           (res_a_09[31:0]         ), //|>-o
    .res_b           (res_b_09[31:0]         ), //|>-o
    .res_tag         (res_tag_9[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_10 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_10[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data10[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz10[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[10]        ), //|<-i
    .op_b_dat        (dat_actv_data10[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz10[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[10]       ), //|<-i
    .res_a           (res_a_10[31:0]          ), //|>-o
    .res_b           (res_b_10[31:0]          ), //|>-o
    .res_tag         (res_tag_10[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_11 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_11[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data11[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz11[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[11]        ), //|<-i
    .op_b_dat        (dat_actv_data11[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz11[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[11]       ), //|<-i
    .res_a           (res_a_11[31:0]          ), //|>-o
    .res_b           (res_b_11[31:0]          ), //|>-o
    .res_tag         (res_tag_11[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_12 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_12[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data12[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz12[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[12]        ), //|<-i
    .op_b_dat        (dat_actv_data12[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz12[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[12]       ), //|<-i
    .res_a           (res_a_12[31:0]          ), //|>-o
    .res_b           (res_b_12[31:0]          ), //|>-o
    .res_tag         (res_tag_12[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_13 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_13[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data13[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz13[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[13]        ), //|<-i
    .op_b_dat        (dat_actv_data13[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz13[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[13]       ), //|<-i
    .res_a           (res_a_13[31:0]          ), //|>-o
    .res_b           (res_b_13[31:0]          ), //|>-o
    .res_tag         (res_tag_13[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_14 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_14[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data14[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz14[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[14]        ), //|<-i
    .op_b_dat        (dat_actv_data14[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz14[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[14]       ), //|<-i
    .res_a           (res_a_14[31:0]          ), //|>-o
    .res_b           (res_b_14[31:0]          ), //|>-o
    .res_tag         (res_tag_14[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_15 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_15[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data15[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz15[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[15]        ), //|<-i
    .op_b_dat        (dat_actv_data15[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz15[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[15]       ), //|<-i
    .res_a           (res_a_15[31:0]          ), //|>-o
    .res_b           (res_b_15[31:0]          ), //|>-o
    .res_tag         (res_tag_15[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_16 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_16[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data16[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz16[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[16]        ), //|<-i
    .op_b_dat        (dat_actv_data16[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz16[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[16]       ), //|<-i
    .res_a           (res_a_16[31:0]          ), //|>-o
    .res_b           (res_b_16[31:0]          ), //|>-o
    .res_tag         (res_tag_16[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_17 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_17[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data17[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz17[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[17]        ), //|<-i
    .op_b_dat        (dat_actv_data17[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz17[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[17]       ), //|<-i
    .res_a           (res_a_17[31:0]          ), //|>-o
    .res_b           (res_b_17[31:0]          ), //|>-o
    .res_tag         (res_tag_17[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_18 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_18[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data18[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz18[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[18]        ), //|<-i
    .op_b_dat        (dat_actv_data18[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz18[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[18]       ), //|<-i
    .res_a           (res_a_18[31:0]          ), //|>-o
    .res_b           (res_b_18[31:0]          ), //|>-o
    .res_tag         (res_tag_18[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_19 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_19[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data19[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz19[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[19]        ), //|<-i
    .op_b_dat        (dat_actv_data19[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz19[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[19]       ), //|<-i
    .res_a           (res_a_19[31:0]          ), //|>-o
    .res_b           (res_b_19[31:0]          ), //|>-o
    .res_tag         (res_tag_19[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_20 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_20[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data20[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz20[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[20]        ), //|<-i
    .op_b_dat        (dat_actv_data20[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz20[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[20]       ), //|<-i
    .res_a           (res_a_20[31:0]          ), //|>-o
    .res_b           (res_b_20[31:0]          ), //|>-o
    .res_tag         (res_tag_20[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_21 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_21[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data21[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz21[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[21]        ), //|<-i
    .op_b_dat        (dat_actv_data21[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz21[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[21]       ), //|<-i
    .res_a           (res_a_21[31:0]          ), //|>-o
    .res_b           (res_b_21[31:0]          ), //|>-o
    .res_tag         (res_tag_21[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_22 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_22[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data22[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz22[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[22]        ), //|<-i
    .op_b_dat        (dat_actv_data22[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz22[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[22]       ), //|<-i
    .res_a           (res_a_22[31:0]          ), //|>-o
    .res_b           (res_b_22[31:0]          ), //|>-o
    .res_tag         (res_tag_22[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_23 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_23[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data23[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz23[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[23]        ), //|<-i
    .op_b_dat        (dat_actv_data23[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz23[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[23]       ), //|<-i
    .res_a           (res_a_23[31:0]          ), //|>-o
    .res_b           (res_b_23[31:0]          ), //|>-o
    .res_tag         (res_tag_23[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_24 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_24[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data24[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz24[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[24]        ), //|<-i
    .op_b_dat        (dat_actv_data24[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz24[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[24]       ), //|<-i
    .res_a           (res_a_24[31:0]          ), //|>-o
    .res_b           (res_b_24[31:0]          ), //|>-o
    .res_tag         (res_tag_24[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_25 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_25[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data25[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz25[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[25]        ), //|<-i
    .op_b_dat        (dat_actv_data25[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz25[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[25]       ), //|<-i
    .res_a           (res_a_25[31:0]          ), //|>-o
    .res_b           (res_b_25[31:0]          ), //|>-o
    .res_tag         (res_tag_25[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_26 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_26[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data26[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz26[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[26]        ), //|<-i
    .op_b_dat        (dat_actv_data26[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz26[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[26]       ), //|<-i
    .res_a           (res_a_26[31:0]          ), //|>-o
    .res_b           (res_b_26[31:0]          ), //|>-o
    .res_tag         (res_tag_26[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_27 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_27[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data27[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz27[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[27]        ), //|<-i
    .op_b_dat        (dat_actv_data27[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz27[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[27]       ), //|<-i
    .res_a           (res_a_27[31:0]          ), //|>-o
    .res_b           (res_b_27[31:0]          ), //|>-o
    .res_tag         (res_tag_27[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_28 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_28[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data28[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz28[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[28]        ), //|<-i
    .op_b_dat        (dat_actv_data28[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz28[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[28]       ), //|<-i
    .res_a           (res_a_28[31:0]          ), //|>-o
    .res_b           (res_b_28[31:0]          ), //|>-o
    .res_tag         (res_tag_28[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_29 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_29[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data29[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz29[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[29]        ), //|<-i
    .op_b_dat        (dat_actv_data29[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz29[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[29]       ), //|<-i
    .res_a           (res_a_29[31:0]          ), //|>-o
    .res_b           (res_b_29[31:0]          ), //|>-o
    .res_tag         (res_tag_29[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_30 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_30[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data30[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz30[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[30]        ), //|<-i
    .op_b_dat        (dat_actv_data30[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz30[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[30]       ), //|<-i
    .res_a           (res_a_30[31:0]          ), //|>-o
    .res_b           (res_b_30[31:0]          ), //|>-o
    .res_tag         (res_tag_30[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_31 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_31[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data31[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz31[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[31]        ), //|<-i
    .op_b_dat        (dat_actv_data31[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz31[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[31]       ), //|<-i
    .res_a           (res_a_31[31:0]          ), //|>-o
    .res_b           (res_b_31[31:0]          ), //|>-o
    .res_tag         (res_tag_31[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_32 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_32[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data32[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz32[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[32]        ), //|<-i
    .op_b_dat        (dat_actv_data32[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz32[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[32]       ), //|<-i
    .res_a           (res_a_32[31:0]          ), //|>-o
    .res_b           (res_b_32[31:0]          ), //|>-o
    .res_tag         (res_tag_32[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_33 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_33[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data33[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz33[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[33]        ), //|<-i
    .op_b_dat        (dat_actv_data33[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz33[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[33]       ), //|<-i
    .res_a           (res_a_33[31:0]          ), //|>-o
    .res_b           (res_b_33[31:0]          ), //|>-o
    .res_tag         (res_tag_33[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_34 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_34[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data34[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz34[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[34]        ), //|<-i
    .op_b_dat        (dat_actv_data34[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz34[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[34]       ), //|<-i
    .res_a           (res_a_34[31:0]          ), //|>-o
    .res_b           (res_b_34[31:0]          ), //|>-o
    .res_tag         (res_tag_34[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_35 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_35[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data35[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz35[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[35]        ), //|<-i
    .op_b_dat        (dat_actv_data35[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz35[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[35]       ), //|<-i
    .res_a           (res_a_35[31:0]          ), //|>-o
    .res_b           (res_b_35[31:0]          ), //|>-o
    .res_tag         (res_tag_35[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_36 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_36[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data36[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz36[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[36]        ), //|<-i
    .op_b_dat        (dat_actv_data36[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz36[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[36]       ), //|<-i
    .res_a           (res_a_36[31:0]          ), //|>-o
    .res_b           (res_b_36[31:0]          ), //|>-o
    .res_tag         (res_tag_36[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_37 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_37[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data37[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz37[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[37]        ), //|<-i
    .op_b_dat        (dat_actv_data37[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz37[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[37]       ), //|<-i
    .res_a           (res_a_37[31:0]          ), //|>-o
    .res_b           (res_b_37[31:0]          ), //|>-o
    .res_tag         (res_tag_37[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_38 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_38[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data38[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz38[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[38]        ), //|<-i
    .op_b_dat        (dat_actv_data38[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz38[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[38]       ), //|<-i
    .res_a           (res_a_38[31:0]          ), //|>-o
    .res_b           (res_b_38[31:0]          ), //|>-o
    .res_tag         (res_tag_38[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_39 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_39[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data39[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz39[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[39]        ), //|<-i
    .op_b_dat        (dat_actv_data39[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz39[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[39]       ), //|<-i
    .res_a           (res_a_39[31:0]          ), //|>-o
    .res_b           (res_b_39[31:0]          ), //|>-o
    .res_tag         (res_tag_39[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_40 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_40[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data40[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz40[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[40]        ), //|<-i
    .op_b_dat        (dat_actv_data40[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz40[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[40]       ), //|<-i
    .res_a           (res_a_40[31:0]          ), //|>-o
    .res_b           (res_b_40[31:0]          ), //|>-o
    .res_tag         (res_tag_40[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_41 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_41[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data41[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz41[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[41]        ), //|<-i
    .op_b_dat        (dat_actv_data41[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz41[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[41]       ), //|<-i
    .res_a           (res_a_41[31:0]          ), //|>-o
    .res_b           (res_b_41[31:0]          ), //|>-o
    .res_tag         (res_tag_41[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_42 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_42[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data42[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz42[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[42]        ), //|<-i
    .op_b_dat        (dat_actv_data42[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz42[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[42]       ), //|<-i
    .res_a           (res_a_42[31:0]          ), //|>-o
    .res_b           (res_b_42[31:0]          ), //|>-o
    .res_tag         (res_tag_42[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_43 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_43[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data43[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz43[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[43]        ), //|<-i
    .op_b_dat        (dat_actv_data43[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz43[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[43]       ), //|<-i
    .res_a           (res_a_43[31:0]          ), //|>-o
    .res_b           (res_b_43[31:0]          ), //|>-o
    .res_tag         (res_tag_43[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_44 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_44[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data44[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz44[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[44]        ), //|<-i
    .op_b_dat        (dat_actv_data44[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz44[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[44]       ), //|<-i
    .res_a           (res_a_44[31:0]          ), //|>-o
    .res_b           (res_b_44[31:0]          ), //|>-o
    .res_tag         (res_tag_44[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_45 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_45[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data45[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz45[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[45]        ), //|<-i
    .op_b_dat        (dat_actv_data45[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz45[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[45]       ), //|<-i
    .res_a           (res_a_45[31:0]          ), //|>-o
    .res_b           (res_b_45[31:0]          ), //|>-o
    .res_tag         (res_tag_45[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_46 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_46[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data46[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz46[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[46]        ), //|<-i
    .op_b_dat        (dat_actv_data46[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz46[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[46]       ), //|<-i
    .res_a           (res_a_46[31:0]          ), //|>-o
    .res_b           (res_b_46[31:0]          ), //|>-o
    .res_tag         (res_tag_46[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_47 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_47[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data47[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz47[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[47]        ), //|<-i
    .op_b_dat        (dat_actv_data47[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz47[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[47]       ), //|<-i
    .res_a           (res_a_47[31:0]          ), //|>-o
    .res_b           (res_b_47[31:0]          ), //|>-o
    .res_tag         (res_tag_47[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_48 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_48[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data48[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz48[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[48]        ), //|<-i
    .op_b_dat        (dat_actv_data48[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz48[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[48]       ), //|<-i
    .res_a           (res_a_48[31:0]          ), //|>-o
    .res_b           (res_b_48[31:0]          ), //|>-o
    .res_tag         (res_tag_48[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_49 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_49[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data49[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz49[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[49]        ), //|<-i
    .op_b_dat        (dat_actv_data49[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz49[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[49]       ), //|<-i
    .res_a           (res_a_49[31:0]          ), //|>-o
    .res_b           (res_b_49[31:0]          ), //|>-o
    .res_tag         (res_tag_49[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_50 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_50[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data50[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz50[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[50]        ), //|<-i
    .op_b_dat        (dat_actv_data50[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz50[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[50]       ), //|<-i
    .res_a           (res_a_50[31:0]          ), //|>-o
    .res_b           (res_b_50[31:0]          ), //|>-o
    .res_tag         (res_tag_50[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_51 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_51[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data51[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz51[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[51]        ), //|<-i
    .op_b_dat        (dat_actv_data51[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz51[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[51]       ), //|<-i
    .res_a           (res_a_51[31:0]          ), //|>-o
    .res_b           (res_b_51[31:0]          ), //|>-o
    .res_tag         (res_tag_51[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_52 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_52[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data52[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz52[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[52]        ), //|<-i
    .op_b_dat        (dat_actv_data52[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz52[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[52]       ), //|<-i
    .res_a           (res_a_52[31:0]          ), //|>-o
    .res_b           (res_b_52[31:0]          ), //|>-o
    .res_tag         (res_tag_52[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_53 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_53[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data53[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz53[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[53]        ), //|<-i
    .op_b_dat        (dat_actv_data53[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz53[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[53]       ), //|<-i
    .res_a           (res_a_53[31:0]          ), //|>-o
    .res_b           (res_b_53[31:0]          ), //|>-o
    .res_tag         (res_tag_53[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_54 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_54[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data54[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz54[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[54]        ), //|<-i
    .op_b_dat        (dat_actv_data54[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz54[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[54]       ), //|<-i
    .res_a           (res_a_54[31:0]          ), //|>-o
    .res_b           (res_b_54[31:0]          ), //|>-o
    .res_tag         (res_tag_54[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_55 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_55[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data55[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz55[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[55]        ), //|<-i
    .op_b_dat        (dat_actv_data55[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz55[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[55]       ), //|<-i
    .res_a           (res_a_55[31:0]          ), //|>-o
    .res_b           (res_b_55[31:0]          ), //|>-o
    .res_tag         (res_tag_55[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_56 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_56[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data56[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz56[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[56]        ), //|<-i
    .op_b_dat        (dat_actv_data56[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz56[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[56]       ), //|<-i
    .res_a           (res_a_56[31:0]          ), //|>-o
    .res_b           (res_b_56[31:0]          ), //|>-o
    .res_tag         (res_tag_56[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_57 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_57[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data57[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz57[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[57]        ), //|<-i
    .op_b_dat        (dat_actv_data57[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz57[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[57]       ), //|<-i
    .res_a           (res_a_57[31:0]          ), //|>-o
    .res_b           (res_b_57[31:0]          ), //|>-o
    .res_tag         (res_tag_57[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_58 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_58[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data58[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz58[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[58]        ), //|<-i
    .op_b_dat        (dat_actv_data58[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz58[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[58]       ), //|<-i
    .res_a           (res_a_58[31:0]          ), //|>-o
    .res_b           (res_b_58[31:0]          ), //|>-o
    .res_tag         (res_tag_58[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_59 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_59[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data59[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz59[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[59]        ), //|<-i
    .op_b_dat        (dat_actv_data59[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz59[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[59]       ), //|<-i
    .res_a           (res_a_59[31:0]          ), //|>-o
    .res_b           (res_b_59[31:0]          ), //|>-o
    .res_tag         (res_tag_59[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_60 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_60[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data60[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz60[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[60]        ), //|<-i
    .op_b_dat        (dat_actv_data60[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz60[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[60]       ), //|<-i
    .res_a           (res_a_60[31:0]          ), //|>-o
    .res_b           (res_b_60[31:0]          ), //|>-o
    .res_tag         (res_tag_60[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_61 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_61[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data61[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz61[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[61]        ), //|<-i
    .op_b_dat        (dat_actv_data61[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz61[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[61]       ), //|<-i
    .res_a           (res_a_61[31:0]          ), //|>-o
    .res_b           (res_b_61[31:0]          ), //|>-o
    .res_tag         (res_tag_61[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_62 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_62[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data62[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz62[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[62]        ), //|<-i
    .op_b_dat        (dat_actv_data62[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz62[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[62]       ), //|<-i
    .res_a           (res_a_62[31:0]          ), //|>-o
    .res_b           (res_b_62[31:0]          ), //|>-o
    .res_tag         (res_tag_62[7:0]         )  //|>-o
   );

NV_NVDLA_CMAC_CORE_MAC_mul  u_mul_63 (
    .nvdla_core_clk  (nvdla_core_clk          ), //|<-i
    .nvdla_core_rstn (nvdla_core_rstn         ), //|<-i
    .cfg_is_fp16     (cfg_is_fp16             ), //|<-i
    .cfg_is_int8     (cfg_is_int8             ), //|<-i
    .cfg_reg_en      (cfg_reg_en              ), //|<-i
    .exp_sft         (exp_sft_63[3:0]         ), //|<-i
    .op_a_dat        (wt_actv_data63[15:0]    ), //|<-i
    .op_a_nz         (wt_actv_nz63[1:0]       ), //|<-i
    .op_a_pvld       (wt_actv_pvld[63]        ), //|<-i
    .op_b_dat        (dat_actv_data63[15:0]   ), //|<-i
    .op_b_nz         (dat_actv_nz63[1:0]      ), //|<-i
    .op_b_pvld       (dat_actv_pvld[63]       ), //|<-i
    .res_a           (res_a_63[31:0]          ), //|>-o
    .res_b           (res_b_63[31:0]          ), //|>-o
    .res_tag         (res_tag_63[7:0]         )  //|>-o
   );

//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---



//==========================================================
// MAC cell CSA tree level 0
// 64(128) -> 16(32)
//==========================================================

///////////////////////////////////////////////////////////////////
//////////////// input select for CSA tree level 0 ////////////////
///////////////////////////////////////////////////////////////////

always @(
  cfg_is_int8_d0
  or res_a_00
  or res_b_00
  ) begin
    pp_in_l0_a_00 = cfg_is_int8_d0[0] ? {2'b0, res_a_00[31:16], 2'b0, res_a_00[15:0]} :
                    {4'b0, res_a_00[31:0]};
    pp_in_l0_b_00 = cfg_is_int8_d0[0] ? {2'b0, res_b_00[31:16], 2'b0, res_b_00[15:0]} :
                    {4'b0, res_b_00[31:0]};
end


//////////////////////////////////////////////////////////
//////////////// CSA tree level 0: 64->16 ////////////////
//////////////////////////////////////////////////////////

// ========================================================================================
// Sample for script with bulk lines printing
// ========================================================================================
//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//|     for my $i (0..9) {
//| 		### for bulk print
//| 		print <<EOF;
//| `ifdef DESIGNWARE_NOEXIST 
//| NV_DW02_tree #(8, 36) u_tree_l0n0$i (
//|    .INPUT              (pp_in_l0n0${i}[287:0])    //|< r
//|   ,.OUT0               (pp_out_l0n0${i}_0[35:0])  //|> w
//|   ,.OUT1               (pp_out_l0n0${i}_1[35:0])  //|> w
//|   );
//| `else 
//| DW02_tree #(8, 36) u_tree_l0n00 (
//|    .INPUT              (pp_in_l0n0${i}[287:0])    //|< r
//|   ,.OUT0               (pp_out_l0n0${i}_0[35:0])  //|> w
//|   ,.OUT1               (pp_out_l0n0${i}_1[35:0])  //|> w
//|   );
//| `endif 
//| EOF
//|      }
`ifdef DESIGNWARE_NOEXIST 
NV_DW02_tree #(8, 36) u_tree_l0n00 (
   .INPUT              (pp_in_l0n00[287:0])    //|< r
  ,.OUT0               (pp_out_l0n00_0[35:0])  //|> w
  ,.OUT1               (pp_out_l0n00_1[35:0])  //|> w
  );
`else 
DW02_tree #(8, 36) u_tree_l0n00 (
   .INPUT              (pp_in_l0n00[287:0])    //|< r
  ,.OUT0               (pp_out_l0n00_0[35:0])  //|> w
  ,.OUT1               (pp_out_l0n00_1[35:0])  //|> w
  );
`endif 
`ifdef DESIGNWARE_NOEXIST 
NV_DW02_tree #(8, 36) u_tree_l0n01 (
   .INPUT              (pp_in_l0n01[287:0])    //|< r
  ,.OUT0               (pp_out_l0n01_0[35:0])  //|> w
  ,.OUT1               (pp_out_l0n01_1[35:0])  //|> w
  );
`else 
DW02_tree #(8, 36) u_tree_l0n00 (
   .INPUT              (pp_in_l0n01[287:0])    //|< r
  ,.OUT0               (pp_out_l0n01_0[35:0])  //|> w
  ,.OUT1               (pp_out_l0n01_1[35:0])  //|> w
  );
`endif 
`ifdef DESIGNWARE_NOEXIST 
NV_DW02_tree #(8, 36) u_tree_l0n02 (
   .INPUT              (pp_in_l0n02[287:0])    //|< r
  ,.OUT0               (pp_out_l0n02_0[35:0])  //|> w
  ,.OUT1               (pp_out_l0n02_1[35:0])  //|> w
  );
`else 
DW02_tree #(8, 36) u_tree_l0n00 (
   .INPUT              (pp_in_l0n02[287:0])    //|< r
  ,.OUT0               (pp_out_l0n02_0[35:0])  //|> w
  ,.OUT1               (pp_out_l0n02_1[35:0])  //|> w
  );
`endif 
`ifdef DESIGNWARE_NOEXIST 
NV_DW02_tree #(8, 36) u_tree_l0n03 (
   .INPUT              (pp_in_l0n03[287:0])    //|< r
  ,.OUT0               (pp_out_l0n03_0[35:0])  //|> w
  ,.OUT1               (pp_out_l0n03_1[35:0])  //|> w
  );
`else 
DW02_tree #(8, 36) u_tree_l0n00 (
   .INPUT              (pp_in_l0n03[287:0])    //|< r
  ,.OUT0               (pp_out_l0n03_0[35:0])  //|> w
  ,.OUT1               (pp_out_l0n03_1[35:0])  //|> w
  );
`endif 
`ifdef DESIGNWARE_NOEXIST 
NV_DW02_tree #(8, 36) u_tree_l0n04 (
   .INPUT              (pp_in_l0n04[287:0])    //|< r
  ,.OUT0               (pp_out_l0n04_0[35:0])  //|> w
  ,.OUT1               (pp_out_l0n04_1[35:0])  //|> w
  );
`else 
DW02_tree #(8, 36) u_tree_l0n00 (
   .INPUT              (pp_in_l0n04[287:0])    //|< r
  ,.OUT0               (pp_out_l0n04_0[35:0])  //|> w
  ,.OUT1               (pp_out_l0n04_1[35:0])  //|> w
  );
`endif 
`ifdef DESIGNWARE_NOEXIST 
NV_DW02_tree #(8, 36) u_tree_l0n05 (
   .INPUT              (pp_in_l0n05[287:0])    //|< r
  ,.OUT0               (pp_out_l0n05_0[35:0])  //|> w
  ,.OUT1               (pp_out_l0n05_1[35:0])  //|> w
  );
`else 
DW02_tree #(8, 36) u_tree_l0n00 (
   .INPUT              (pp_in_l0n05[287:0])    //|< r
  ,.OUT0               (pp_out_l0n05_0[35:0])  //|> w
  ,.OUT1               (pp_out_l0n05_1[35:0])  //|> w
  );
`endif 
`ifdef DESIGNWARE_NOEXIST 
NV_DW02_tree #(8, 36) u_tree_l0n06 (
   .INPUT              (pp_in_l0n06[287:0])    //|< r
  ,.OUT0               (pp_out_l0n06_0[35:0])  //|> w
  ,.OUT1               (pp_out_l0n06_1[35:0])  //|> w
  );
`else 
DW02_tree #(8, 36) u_tree_l0n00 (
   .INPUT              (pp_in_l0n06[287:0])    //|< r
  ,.OUT0               (pp_out_l0n06_0[35:0])  //|> w
  ,.OUT1               (pp_out_l0n06_1[35:0])  //|> w
  );
`endif 
`ifdef DESIGNWARE_NOEXIST 
NV_DW02_tree #(8, 36) u_tree_l0n07 (
   .INPUT              (pp_in_l0n07[287:0])    //|< r
  ,.OUT0               (pp_out_l0n07_0[35:0])  //|> w
  ,.OUT1               (pp_out_l0n07_1[35:0])  //|> w
  );
`else 
DW02_tree #(8, 36) u_tree_l0n00 (
   .INPUT              (pp_in_l0n07[287:0])    //|< r
  ,.OUT0               (pp_out_l0n07_0[35:0])  //|> w
  ,.OUT1               (pp_out_l0n07_1[35:0])  //|> w
  );
`endif 
`ifdef DESIGNWARE_NOEXIST 
NV_DW02_tree #(8, 36) u_tree_l0n08 (
   .INPUT              (pp_in_l0n08[287:0])    //|< r
  ,.OUT0               (pp_out_l0n08_0[35:0])  //|> w
  ,.OUT1               (pp_out_l0n08_1[35:0])  //|> w
  );
`else 
DW02_tree #(8, 36) u_tree_l0n00 (
   .INPUT              (pp_in_l0n08[287:0])    //|< r
  ,.OUT0               (pp_out_l0n08_0[35:0])  //|> w
  ,.OUT1               (pp_out_l0n08_1[35:0])  //|> w
  );
`endif 
`ifdef DESIGNWARE_NOEXIST 
NV_DW02_tree #(8, 36) u_tree_l0n09 (
   .INPUT              (pp_in_l0n09[287:0])    //|< r
  ,.OUT0               (pp_out_l0n09_0[35:0])  //|> w
  ,.OUT1               (pp_out_l0n09_1[35:0])  //|> w
  );
`else 
DW02_tree #(8, 36) u_tree_l0n00 (
   .INPUT              (pp_in_l0n09[287:0])    //|< r
  ,.OUT0               (pp_out_l0n09_0[35:0])  //|> w
  ,.OUT1               (pp_out_l0n09_1[35:0])  //|> w
  );
`endif 
//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---



//==========================================================
//// Sample for strange port defines
//==========================================================
//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//| &Instance test_DAC;
//|   &Connect iSrc_Select  2'b00;
//|   &Connect oFLASH_ADDR  'h0;
test_DAC  u_test_DAC (
    .iCLK_18_4   (iCLK_18_4         ), //|<-i
    .iRST_N      (iRST_N            ), //|<-i
    .iFLASH_DATA (iFLASH_DATA[FLASH_DATA_WIDTH-1:0]), //|<-i
    .iSDRAM_DATA (iSDRAM_DATA[SDRAM_DATA_WIDTH-1:0]), //|<-i
    .iSRAM_DATA  (iSRAM_DATA[SRAM_DATA_WIDTH-1:0]), //|<-i
    .iSrc_Select (2'b00             ), //|<-i
    .oAUD_BCK    (oAUD_BCK          ), //|>-o
    .oAUD_DATA   (oAUD_DATA[`TEST_BIT:0]), //|>-o
    .oAUD_LRCK   (oAUD_LRCK         ), //|>-o
    .oFLASH_ADDR ('h0               ), //|>-o
    .oSDRAM_ADDR (oSDRAM_ADDR[SDRAM_ADDR_WIDTH:0]), //|>-o
    .oSRAM_ADDR  (oSRAM_ADDR[SRAM_ADDR_WIDTH:0])  //|>-o
   );

//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---

///////////////////////////////////////////////////////////////////////
//////////////// assemble output from CSA tree level 0 ////////////////
///////////////////////////////////////////////////////////////////////

always @(
  pp_out_l0n00_0
  or pp_out_l0n00_1
  ) begin
    pp_out_l0n00_0_d1_w[35:0] = pp_out_l0n00_0;
    pp_out_l0n00_1_d1_w[35:0] = pp_out_l0n00_1;
end

//==========================================================
// Gather FP16 sign tag
//==========================================================

assign res_tag_b0 = {res_tag_63[0], res_tag_62[0], res_tag_61[0], res_tag_60[0], res_tag_59[0], res_tag_58[0], res_tag_57[0], res_tag_56[0], res_tag_55[0], res_tag_54[0], res_tag_53[0], res_tag_52[0], res_tag_51[0], res_tag_50[0], res_tag_49[0], res_tag_48[0], res_tag_47[0], res_tag_46[0], res_tag_45[0], res_tag_44[0], res_tag_43[0], res_tag_42[0], res_tag_41[0], res_tag_40[0], res_tag_39[0], res_tag_38[0], res_tag_37[0], res_tag_36[0], res_tag_35[0], res_tag_34[0], res_tag_33[0], res_tag_32[0], res_tag_31[0], res_tag_30[0], res_tag_29[0], res_tag_28[0], res_tag_27[0], res_tag_26[0], res_tag_25[0], res_tag_24[0], res_tag_23[0], res_tag_22[0], res_tag_21[0], res_tag_20[0], res_tag_19[0], res_tag_18[0], res_tag_17[0], res_tag_16[0], res_tag_15[0], res_tag_14[0], res_tag_13[0], res_tag_12[0], res_tag_11[0], res_tag_10[0], res_tag_9[0], res_tag_8[0], res_tag_7[0], res_tag_6[0], res_tag_5[0], res_tag_4[0], res_tag_3[0], res_tag_2[0], res_tag_1[0], res_tag_0[0]};
assign res_tag_b1 = {res_tag_63[1], res_tag_62[1], res_tag_61[1], res_tag_60[1], res_tag_59[1], res_tag_58[1], res_tag_57[1], res_tag_56[1], res_tag_55[1], res_tag_54[1], res_tag_53[1], res_tag_52[1], res_tag_51[1], res_tag_50[1], res_tag_49[1], res_tag_48[1], res_tag_47[1], res_tag_46[1], res_tag_45[1], res_tag_44[1], res_tag_43[1], res_tag_42[1], res_tag_41[1], res_tag_40[1], res_tag_39[1], res_tag_38[1], res_tag_37[1], res_tag_36[1], res_tag_35[1], res_tag_34[1], res_tag_33[1], res_tag_32[1], res_tag_31[1], res_tag_30[1], res_tag_29[1], res_tag_28[1], res_tag_27[1], res_tag_26[1], res_tag_25[1], res_tag_24[1], res_tag_23[1], res_tag_22[1], res_tag_21[1], res_tag_20[1], res_tag_19[1], res_tag_18[1], res_tag_17[1], res_tag_16[1], res_tag_15[1], res_tag_14[1], res_tag_13[1], res_tag_12[1], res_tag_11[1], res_tag_10[1], res_tag_9[1], res_tag_8[1], res_tag_7[1], res_tag_6[1], res_tag_5[1], res_tag_4[1], res_tag_3[1], res_tag_2[1], res_tag_1[1], res_tag_0[1]};
assign res_tag_b2 = {res_tag_63[2], res_tag_62[2], res_tag_61[2], res_tag_60[2], res_tag_59[2], res_tag_58[2], res_tag_57[2], res_tag_56[2], res_tag_55[2], res_tag_54[2], res_tag_53[2], res_tag_52[2], res_tag_51[2], res_tag_50[2], res_tag_49[2], res_tag_48[2], res_tag_47[2], res_tag_46[2], res_tag_45[2], res_tag_44[2], res_tag_43[2], res_tag_42[2], res_tag_41[2], res_tag_40[2], res_tag_39[2], res_tag_38[2], res_tag_37[2], res_tag_36[2], res_tag_35[2], res_tag_34[2], res_tag_33[2], res_tag_32[2], res_tag_31[2], res_tag_30[2], res_tag_29[2], res_tag_28[2], res_tag_27[2], res_tag_26[2], res_tag_25[2], res_tag_24[2], res_tag_23[2], res_tag_22[2], res_tag_21[2], res_tag_20[2], res_tag_19[2], res_tag_18[2], res_tag_17[2], res_tag_16[2], res_tag_15[2], res_tag_14[2], res_tag_13[2], res_tag_12[2], res_tag_11[2], res_tag_10[2], res_tag_9[2], res_tag_8[2], res_tag_7[2], res_tag_6[2], res_tag_5[2], res_tag_4[2], res_tag_3[2], res_tag_2[2], res_tag_1[2], res_tag_0[2]};
assign res_tag_b3 = {res_tag_63[3], res_tag_62[3], res_tag_61[3], res_tag_60[3], res_tag_59[3], res_tag_58[3], res_tag_57[3], res_tag_56[3], res_tag_55[3], res_tag_54[3], res_tag_53[3], res_tag_52[3], res_tag_51[3], res_tag_50[3], res_tag_49[3], res_tag_48[3], res_tag_47[3], res_tag_46[3], res_tag_45[3], res_tag_44[3], res_tag_43[3], res_tag_42[3], res_tag_41[3], res_tag_40[3], res_tag_39[3], res_tag_38[3], res_tag_37[3], res_tag_36[3], res_tag_35[3], res_tag_34[3], res_tag_33[3], res_tag_32[3], res_tag_31[3], res_tag_30[3], res_tag_29[3], res_tag_28[3], res_tag_27[3], res_tag_26[3], res_tag_25[3], res_tag_24[3], res_tag_23[3], res_tag_22[3], res_tag_21[3], res_tag_20[3], res_tag_19[3], res_tag_18[3], res_tag_17[3], res_tag_16[3], res_tag_15[3], res_tag_14[3], res_tag_13[3], res_tag_12[3], res_tag_11[3], res_tag_10[3], res_tag_9[3], res_tag_8[3], res_tag_7[3], res_tag_6[3], res_tag_5[3], res_tag_4[3], res_tag_3[3], res_tag_2[3], res_tag_1[3], res_tag_0[3]};
assign res_tag_b4 = {res_tag_63[4], res_tag_62[4], res_tag_61[4], res_tag_60[4], res_tag_59[4], res_tag_58[4], res_tag_57[4], res_tag_56[4], res_tag_55[4], res_tag_54[4], res_tag_53[4], res_tag_52[4], res_tag_51[4], res_tag_50[4], res_tag_49[4], res_tag_48[4], res_tag_47[4], res_tag_46[4], res_tag_45[4], res_tag_44[4], res_tag_43[4], res_tag_42[4], res_tag_41[4], res_tag_40[4], res_tag_39[4], res_tag_38[4], res_tag_37[4], res_tag_36[4], res_tag_35[4], res_tag_34[4], res_tag_33[4], res_tag_32[4], res_tag_31[4], res_tag_30[4], res_tag_29[4], res_tag_28[4], res_tag_27[4], res_tag_26[4], res_tag_25[4], res_tag_24[4], res_tag_23[4], res_tag_22[4], res_tag_21[4], res_tag_20[4], res_tag_19[4], res_tag_18[4], res_tag_17[4], res_tag_16[4], res_tag_15[4], res_tag_14[4], res_tag_13[4], res_tag_12[4], res_tag_11[4], res_tag_10[4], res_tag_9[4], res_tag_8[4], res_tag_7[4], res_tag_6[4], res_tag_5[4], res_tag_4[4], res_tag_3[4], res_tag_2[4], res_tag_1[4], res_tag_0[4]};
assign res_tag_b5 = {res_tag_63[5], res_tag_62[5], res_tag_61[5], res_tag_60[5], res_tag_59[5], res_tag_58[5], res_tag_57[5], res_tag_56[5], res_tag_55[5], res_tag_54[5], res_tag_53[5], res_tag_52[5], res_tag_51[5], res_tag_50[5], res_tag_49[5], res_tag_48[5], res_tag_47[5], res_tag_46[5], res_tag_45[5], res_tag_44[5], res_tag_43[5], res_tag_42[5], res_tag_41[5], res_tag_40[5], res_tag_39[5], res_tag_38[5], res_tag_37[5], res_tag_36[5], res_tag_35[5], res_tag_34[5], res_tag_33[5], res_tag_32[5], res_tag_31[5], res_tag_30[5], res_tag_29[5], res_tag_28[5], res_tag_27[5], res_tag_26[5], res_tag_25[5], res_tag_24[5], res_tag_23[5], res_tag_22[5], res_tag_21[5], res_tag_20[5], res_tag_19[5], res_tag_18[5], res_tag_17[5], res_tag_16[5], res_tag_15[5], res_tag_14[5], res_tag_13[5], res_tag_12[5], res_tag_11[5], res_tag_10[5], res_tag_9[5], res_tag_8[5], res_tag_7[5], res_tag_6[5], res_tag_5[5], res_tag_4[5], res_tag_3[5], res_tag_2[5], res_tag_1[5], res_tag_0[5]};
assign res_tag_b6 = {res_tag_63[6], res_tag_62[6], res_tag_61[6], res_tag_60[6], res_tag_59[6], res_tag_58[6], res_tag_57[6], res_tag_56[6], res_tag_55[6], res_tag_54[6], res_tag_53[6], res_tag_52[6], res_tag_51[6], res_tag_50[6], res_tag_49[6], res_tag_48[6], res_tag_47[6], res_tag_46[6], res_tag_45[6], res_tag_44[6], res_tag_43[6], res_tag_42[6], res_tag_41[6], res_tag_40[6], res_tag_39[6], res_tag_38[6], res_tag_37[6], res_tag_36[6], res_tag_35[6], res_tag_34[6], res_tag_33[6], res_tag_32[6], res_tag_31[6], res_tag_30[6], res_tag_29[6], res_tag_28[6], res_tag_27[6], res_tag_26[6], res_tag_25[6], res_tag_24[6], res_tag_23[6], res_tag_22[6], res_tag_21[6], res_tag_20[6], res_tag_19[6], res_tag_18[6], res_tag_17[6], res_tag_16[6], res_tag_15[6], res_tag_14[6], res_tag_13[6], res_tag_12[6], res_tag_11[6], res_tag_10[6], res_tag_9[6], res_tag_8[6], res_tag_7[6], res_tag_6[6], res_tag_5[6], res_tag_4[6], res_tag_3[6], res_tag_2[6], res_tag_1[6], res_tag_0[6]};
assign res_tag_b7 = {res_tag_63[7], res_tag_62[7], res_tag_61[7], res_tag_60[7], res_tag_59[7], res_tag_58[7], res_tag_57[7], res_tag_56[7], res_tag_55[7], res_tag_54[7], res_tag_53[7], res_tag_52[7], res_tag_51[7], res_tag_50[7], res_tag_49[7], res_tag_48[7], res_tag_47[7], res_tag_46[7], res_tag_45[7], res_tag_44[7], res_tag_43[7], res_tag_42[7], res_tag_41[7], res_tag_40[7], res_tag_39[7], res_tag_38[7], res_tag_37[7], res_tag_36[7], res_tag_35[7], res_tag_34[7], res_tag_33[7], res_tag_32[7], res_tag_31[7], res_tag_30[7], res_tag_29[7], res_tag_28[7], res_tag_27[7], res_tag_26[7], res_tag_25[7], res_tag_24[7], res_tag_23[7], res_tag_22[7], res_tag_21[7], res_tag_20[7], res_tag_19[7], res_tag_18[7], res_tag_17[7], res_tag_16[7], res_tag_15[7], res_tag_14[7], res_tag_13[7], res_tag_12[7], res_tag_11[7], res_tag_10[7], res_tag_9[7], res_tag_8[7], res_tag_7[7], res_tag_6[7], res_tag_5[7], res_tag_4[7], res_tag_3[7], res_tag_2[7], res_tag_1[7], res_tag_0[7]};



// =========================================================================================================================================
// =============== Below for more testing ==============
// =========================================================================================================================================



//==========================================================
// Config logic
//==========================================================

always @(posedge nvdla_core_clk or negedge nvdla_core_rstn) begin
  if (!nvdla_core_rstn) begin
    cfg_reg_en_d0 <= 1'b0;
  end else begin
  cfg_reg_en_d0 <= cfg_reg_en;
  end
end
always @(posedge nvdla_core_clk or negedge nvdla_core_rstn) begin
  if (!nvdla_core_rstn) begin
    cfg_is_int8_d0 <= {65{1'b0}};
  end else begin
  if ((cfg_reg_en) == 1'b1) begin
    cfg_is_int8_d0 <= {65{cfg_is_int8}};
  // VCS coverage off
  end else if ((cfg_reg_en) == 1'b0) begin
  end else begin
    cfg_is_int8_d0 <= 'bx;  // spyglass disable STARC-2.10.1.6 W443 NoWidthInBasedNum-ML -- (Constant containing x or z used, Based number `bx contains an X, Width specification missing for based number)
  // VCS coverage on
  end
  end
end





always @(*)
begin
  MISO_I_IPX = my_msio;
  MOSI_O_IPX = my_mosi;
end

//==========================================================
//// Sample for IPXACT instance with AddParam function
//==========================================================
//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//|  &Instance simple_spi.xml my_spi_Param;
//|   AddParam PARM0 A0;
//|   AddParam PARM1 A1;
//|   Connect -final -interface spi  -up \${1}_IPX ;
//|   Connect /(clk.*)/ IPX_\${1};
//|   Connect /(rst.*)/ IPX_\${1};
simple_spi
   #(
       .PARM1(A1),
       .PARM0(A0)
    )
  my_spi_Param (
    .clk_i  (IPX_clk_i        ), //|<-i
    .rst_i  (IPX_rst_i        ), //|<-i
    .adr_i  (adr_i[2:0]       ), //|<-i
    .cyc_i  (cyc_i            ), //|<-i
    .dat_i  (dat_i[7:0]       ), //|<-i
    .miso_i (MISO_I_IPX       ), //|<-i
    .stb_i  (stb_i            ), //|<-i
    .we_i   (we_i             ), //|<-i
    .ack_o  (ack_o            ), //|>-o
    .dat_o  (dat_o[7:0]       ), //|>-o
    .inta_o (inta_o           ), //|>-o
    .mosi_o (MOSI_O_IPX       ), //|>-o
    .sck_o  (SCK_O_IPX        ), //|>-o
    .ss_o   (SS_O_IPX         )  //|>-o
   );

//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---


//============= Sample to Print(show) interface to a file ========
////:	&ShowIntf("spi");


//============= Sample to Translate(show) IPXACT to JSON file ========
//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//| &TransIPX("simple_spi.xml");
//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---



//==========================================================
//// Sample for IPXACT instance with multi-paramaters
//==========================================================
//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//|  &Instance simple_spi.xml
//|      #( .parm0(0),
//| 		 .param1(1),
//| 		 .param2(2)
//| 	 )
//| //| my_spi;//|     Connect -final -interface spi  -up \${1}_IPX ;
//|     Connect /(clk.*)/ IPX_\${1};
//|     Connect /(rst.*)/ IPX_\${1};
simple_spi
      #( .parm0(0),
		 .param1(1),
		 .param2(2)
	 )
 my_spi (
    .clk_i  (IPX_clk_i        ), //|<-i
    .rst_i  (IPX_rst_i        ), //|<-i
    .adr_i  (adr_i[2:0]       ), //|<-i
    .cyc_i  (cyc_i            ), //|<-i
    .dat_i  (dat_i[7:0]       ), //|<-i
    .miso_i (MISO_I_IPX       ), //|<-i
    .stb_i  (stb_i            ), //|<-i
    .we_i   (we_i             ), //|<-i
    .ack_o  (ack_o            ), //|>-o
    .dat_o  (dat_o[7:0]       ), //|>-o
    .inta_o (inta_o           ), //|>-o
    .mosi_o (MOSI_O_IPX       ), //|>-o
    .sck_o  (SCK_O_IPX        ), //|>-o
    .ss_o   (SS_O_IPX         )  //|>-o
   );

//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---


//==========================================================
//// Sample for JSON instance 
//==========================================================
//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//|    &Instance my_test_design.JSON;
//|      Connect -final -interface my_spi  My_\${1} ;
//|      Connect /(clk.*)/ My_\${1};
//|      Connect /(reset.*)/ My_\${1};
my_test_design  u_my_test_design (
    .clk             (My_clk                ), //|<-i
    .reset           (My_reset              ), //|<-i
    .PRE_PADDR_SUF   (PRE_PADDR_SUF[31:0]   ), //|<-i
    .PRE_PDAT_SUF    (PRE_PDAT_SUF[31:0]    ), //|<-i
    .PRE_PENABL_SUF  (PRE_PENABL_SUF        ), //|<-i
    .PRE_PRDATA_SUF  (PRE_PRDATA_SUF[31:0]  ), //|<-i
    .PRE_PSELX_SUF   (PRE_PSELX_SUF         ), //|<-i
    .PRE_PSLVERR_SUF (PRE_PSLVERR_SUF       ), //|<-i
    .mosi_o          (My_mosi_o[0:0]        ), //|<-i
    .sck_o           (My_sck_o[0:0]         ), //|<-i
    .ss_o            (My_ss_o[0:0]          ), //|<-i
    .PRE_PREADY_SUF  (PRE_PREADY_SUF        ), //|>-o
    .miso_i          (My_miso_i[0:0]        )  //|>-o
   );

//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---

//==========================================================
// Final register for MAC output
//==========================================================

always @(posedge nvdla_core_clk or negedge nvdla_core_rstn) begin
  if (!nvdla_core_rstn) begin
    mac_out_pvld <= 1'b0;
  end else begin
  mac_out_pvld <= pp_pvld_d3[0];
  end
end


//==========================================================
//// Sample for Interface add & print
//==========================================================
//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//| &AddIntfByIPX("./cfg/simple_spi.xml");
//|  &AddIntfByJson("./cfg/MyIntf.json");
//|  &PrintIntfPort("-intf spi");
input                     miso_i          ;
output                    ss_o            ;
output                    mosi_o          ;
output                    sck_o           ;
//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---



//==========================================================
//// Sample of normal Perl script with hash
//==========================================================
//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//|   my %test_hash = (
//|        'sys_ctrl'=> "&",
//|        'sys_en'  => "&",
//|        'sys_off'  => "|",       
//|        'sys_on' => ""
//|   );
//|   for my $i (0..3) {
//|       my $sig = "test_input$i & ( ";
//|       foreach my $test_sig (sort(keys(%test_hash))) {
//| 	    $sig .= " $test_sig"." $test_hash{$test_sig} ";
//| 	  }
//|       print "assign test_wire$i = $sig );\n";
//|   }
assign test_wire0 = test_input0 & (  sys_ctrl &  sys_en &  sys_off |  sys_on   );
assign test_wire1 = test_input1 & (  sys_ctrl &  sys_en &  sys_off |  sys_on   );
assign test_wire2 = test_input2 & (  sys_ctrl &  sys_en &  sys_off |  sys_on   );
assign test_wire3 = test_input3 & (  sys_ctrl &  sys_en &  sys_off |  sys_on   );
//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---



always @(*) begin
  dat_pre_exp <= my_data_pre_exp                  ;
  dat_pre_mask<= my_data_pre_max                 ;
end


//==========================================================
//// Sample of Connect with standard AMBA interface
//==========================================================
//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//| &Instance test_sys_ctrl_apb_regs;
//|   Connect -final -interface APB3  -up \${1}_suffix ;
test_sys_ctrl_apb_regs  u_test_sys_ctrl_apb_regs (
    .pclk                       (PCLK_SUFFIX                      ), //|<-i
    .presetn                    (PRESETN_SUFFIX                   ), //|<-i
    .paddr                      (PADDR_SUFFIX[31:0]               ), //|<-i
    .penable                    (PENABLE_SUFFIX                   ), //|<-i
    .psel                       (PSEL_SUFFIX                      ), //|<-i
    .pwdata                     (PWDATA_SUFFIX[31:0]              ), //|<-i
    .pwrite                     (PWRITE_SUFFIX                    ), //|<-i
    .prdata                     (PRDATA_SUFFIX[31:0]              ), //|>-o
    .pready                     (PREADY_SUFFIX                    ), //|>-o
    .pslverr                    (PSLVERR_SUFFIX                   ), //|>-o
    .sys_ctrl0_l2c_strip_mode   (sys_ctrl0_l2c_strip_mode[2:0]    ), //|>-o
    .sys_ctrl0_mem_repair_done  (sys_ctrl0_mem_repair_done[6:0]   ), //|>-o
    .sys_ctrl0_mem_repair_en    (sys_ctrl0_mem_repair_en[0:0]     ), //|>-o
    .sys_ctrl0_pdc_use_arm_ctrl (sys_ctrl0_pdc_use_arm_ctrl[0:0]  ), //|>-o
    .sys_ctrl0_smmu_mmusid      (sys_ctrl0_smmu_mmusid[4:0]       ), //|>-o
    .test_reg_test_field0       (test_reg_test_field0[3:0]        ), //|>-o
    .test_reg_test_filed1       (test_reg_test_filed1[1:0]        )  //|>-o
   );

//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---

//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//| &PrintAmbaBus("-type APB3 -awd 18 -d 32 -pre Test_ -u ");
reg                       TEST_PENABLE    ;
reg                       TEST_PSLVERR    ;
reg                       TEST_PRESETN    ;
reg                       TEST_PCLK       ;
reg                       TEST_PREADY     ;
reg                       TEST_PSEL       ;
reg      [17:0]           TEST_PADDR      ;
reg      [31:0]           TEST_PRDATA     ;
reg                       TEST_PWRITE     ;
reg      [31:0]           TEST_PWDATA     ;
//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---


//==========================================================
//// Sample of adding interface from Perl Hash Array
//==========================================================
//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//|   my %APB3 = (
//|        'pSELx' => "input: 1",
//|        'pADDR' => "input: 32",
//|        'pENABL' => "input: 1",
//|        'pRDATA' => "output: 32",
//|        'pREADY' => "output: 1",
//|        'pSLVERR' => "output: 1",
//|        'pDAT' => "input: 32"
//|   );
//|   &AddIntfByHash(\%APB3,"test_APB3");
//|   &PrintIntfPort("-intf test_APB3 -awd 12 -d 32 -pre my_ -port -end ;");
input                     my_pENABL       ;
input    [31:0]           my_pDAT         ;
output                    my_pREADY       ;
input                     my_pSELx        ;
input    [11:0]           my_pADDR        ;
output   [31:0]           my_pRDATA       ;
output                    my_pSLVERR      ;
//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---


//==========================================================
//// Sample of embeded variable
//==========================================================
//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//| our $reset= " or negedge resetn";
//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---


//==========================================================
//// Sample of adding interface by SystemVerilog interface code
//==========================================================
//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//|   my $sv = "
//|   interface test_if(input clk);
//|     logic rst_n,
//|     wire  [1:0] port_a_0 ;
//|     logic [12:0] port_a_1 ;
//|     wire port_b_0 ;
//|     logic port_b_1 ;
//|    endinterface	
//| ";
//| 	&AddIntfBySV($sv);
//|     &PrintIntfPort("-intf test_if -up"); 
//| 
logic    [12:0]           PORT_A_1        ;
logic                     RST_N           ;
wire     [1:0]            PORT_A_0        ;
wire                      PORT_B_0        ;
logic                     PORT_B_1        ;
//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---


//==========================================================
//// Sample of auto signal declare
//==========================================================
assign test_wires = test_input[3:0];

always @(posedge clk  or negedge resetn)
begin
    q <= d;
	$display("%t:%m: this is a test string\n");
end


assign plic_int_vld[`INT_NUM_PLIC+15:0] = {pad_plic_int_vld[`INT_NUM_PLIC-1:0],14'b0,l2c_plic_ecc_int_vld,1'b0};
assign plic_int_cfg[`INT_NUM_PLIC+15:0] = {pad_plic_int_cfg[`INT_NUM_PLIC-1:0],16'b0};
//assign plic_int_cfg = {pad_plic_int_cfg[`INT_NUM_PLIC-1:0],16'b0};
assign plic_int_cfg_test_0 = {pad_plic_int_cfg[`INT_NUM_PLIC-1:0],16'b0};
assign plic_int_cfg_test_1 = {pad_plic_int_cfg[239:0],16'b0};
assign plic_int_cfg_test_2 = {pad_plic_int_cfg[240-1:0],16'b0};

assign plic_int_cfg_test_3 = pad_plic_int_cfg[239:0];

assign plic_int_cfg_test_4 = {pad_plic_int_cfg[240+2:0],16'b0};

assign plic_int_cfg_test_5 = pad_plic_int_cfg[NUM_INT-1:0];
assign plic_int_cfg_test_6 = {pad_plic_int_cfg[240-1:0],16'b0};

assign plic_int_cfg_test_7 = {pad_plic_int_cfg[NUM_TOTAL-1:0],16'b0};

assign plic_core0_me_int  = plic_hartx_mint_req[0];
assign plic_core0_se_int  = plic_hartx_sint_req[0];

//==========================================================
//==========================================================
//==========================================================
//// Sample of various inhouse design generation & instance
//==========================================================
//==========================================================
//==========================================================
//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//| &eFunc::ClkGen("Test_Clk", "./cfg/Clk_Cfg.json");
//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---


//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//| &eFunc::RstGen("Test_Rst", "./cfg/Rst_Cfg.json");
//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---


//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//| &eFunc::FuseGen("Test_Fuse", "./cfg/Fuse_Cfg.json");
//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---


//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//| &eFunc::PmuGen("Test_Pmu", "./cfg/Pmu_Cfg.json");
//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---


//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//| &eFunc::MemGen("Test_Mem", "./cfg/Mem_Cfg.json");
//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---


//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//| &eFunc::AsyncIntfGen("Test_AsyncIntf", "./cfg/AsyncIntf_Cfg.json");
//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---


//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//| &eFunc::FifoGen("Test_SFifo", "./cfg/SFifo_Cfg.json");
//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---


//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//| &Instance Test_SFifo;
Test_SFifo  u_Test_SFifo (
    .clks    (clks          ), //|<-i
    .rstn    (rstn          ), //|<-i
    .rd_en   (rd_en         ), //|<-i
    .wr_din  (wr_din[DATA_WIDTH-1:0]), //|<-i
    .wr_en   (wr_en         ), //|<-i
    .empty   (empty         ), //|>-o
    .full    (full          ), //|>-o
    .rd_dout (rd_dout[DATA_WIDTH-1:0])  //|>-o
   );

//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---

//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//| &eFunc::FifoGen("Test_AFifo", "./cfg/AFifo_Cfg.json");
//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---


//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//| &Instance Test_AFifo;
Test_AFifo  u_Test_AFifo (
    .rd_clk  (rd_clk        ), //|<-i
    .rst_rd  (rst_rd        ), //|<-i
    .rst_wr  (rst_wr        ), //|<-i
    .wr_clk  (wr_clk        ), //|<-i
    .rd_en   (rd_en         ), //|<-i
    .wr_din  (wr_din[data_width-1:0]), //|<-i
    .wr_en   (wr_en         ), //|<-i
    .empty   (empty         ), //|>-o
    .full    (full          ), //|>-o
    .rd_dout (rd_dout[data_width-1:0])  //|>-o
   );

//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---


endmodule // NV_NVDLA_CMAC_CORE_mac


//==========================================================
//==========================================================
//==========================================================
//// Sample of exporting interface & port, 
//// generate module JSON file for integration
//// NOTE: GenModJson must be AFTER "endmodule", 
//// otherwisse cause syntax error, fix later
//// Othter functions can be anywhere
//==========================================================
//==========================================================
//==========================================================
//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//| &ExptIntf("-intf_name test_APB3 -name my_APB3 -upcase -prefix Pre_ -suffix _Suf -master");
//|  &ExptIntf("-intf spi -name my_spi");
//|  &ExptPort("clk", "input", "1");
//|  &ExptPort("reset", "input", "1");
//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---


//manual defined name, may not be same as current module, not recommended
//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//| &GenModJson("test_design" ); # manual name may not be same as current module, not recommended
//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---


//default usage for current Top Module
//| --- ePerl generated code Begin (DO NOT EDIT BELOW!) ---
//| &GenModJson(); # default usage for current Top Module
//| --- ePerl generated code End (DO NOT EDIT ABOVE!) ---


